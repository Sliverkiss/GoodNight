/**************************************

脚本名称：微信公众号 农粑粑 签到 积分兑换实物
脚本作者：@Sliverkiss
更新日期：2023.09.01 17:40:11

脚本兼容：Surge、QuantumultX、Loon、Shadowrocket、Node.js
只测试过loon和青龙，其它环境请自行尝试

ps:很遗憾，脚本是支持青龙的，但该小程序禁止在pc端签到，跑了也没用。

*************************
【 签到脚本使用教程 】:
*************************

青龙：
1.登录后抓包 sc.gdzfxc.com域名下的session_id，填写到nbb_data,多账号用 @ 分割
2.可选推送：将bark的key填写到bark_key，不填默认使用青龙自带的推送

Loon: 
1.登录后抓包 sc.gdzfxc.com域名下的session_id
2.打开boxjs->我的->数据查看器->在数据键输入nbb_data->VIEW，将session_id填写到数据内容，点击保存,多账号用@分割;

⚠️【免责声明】
------------------------------------------
1、此脚本仅用于学习研究，不保证其合法性、准确性、有效性，请根据情况自行判断，本人对此不承担任何保证责任。
2、由于此脚本仅用于学习研究，您必须在下载后 24 小时内将所有内容从您的计算机或手机或任何存储设备中完全删除，若违反规定引起任何事件本人对此均不负责。
3、请勿将此脚本用于任何商业或非法目的，若违反规定请自行对此负责。
4、此脚本涉及应用与本人无关，本人对因此引起的任何隐私泄漏或其他后果不承担任何责任。
5、本人对任何脚本引发的问题概不负责，包括但不限于由脚本错误引起的任何损失和损害。
6、如果任何单位或个人认为此脚本可能涉嫌侵犯其权利，应及时通知并提供身份证明，所有权证明，我们将在收到认证文件确认后删除此脚本。
7、所有直接或间接使用、查看此脚本的人均应该仔细阅读此声明。本人保留随时更改或补充此声明的权利。一旦您使用或复制了此脚本，即视为您已接受此免责声明。


******************************************/


// env.js 全局
function _0x1728(){const _0x4d77f4=['❌账号','1925196gCicwm','headers','bark_key','keys','Authorization','token','https://sc.gdzfxc.com/?s=/ApiSign/signin&aid=1&platform=wx&session_id=','indexOf','finally','随机延迟','nbb_data','split','notice','错误获取签到Cookie失败','292470VzquMW','setdata','\x0a=============\x20用户CK有效性验证\x20=============\x0a','all','2074659tMYjIm','533050fMzEiS','OPTIONS','sendNotify','signin','&pid=0','map','isNode','共找到','length','status','round','326365UlMWap','message','\x20>>\x20check\x20ck\x20error!','getRandomTime','undefined','5880144CQSTcd','getdata','authorization','✅check\x20success!','msg','check','notifyMsg','✅目前共','log','index','done','12JHylXS','农粑粑','barkKey','name','./sendNotify','wait','468516PJhjEx','https://raw.githubusercontent.com/Sliverkiss/GoodNight/main/tip.json','push','application/json','join','myscore','✅签到成功！获得','🔷账号','https://raw.githubusercontent.com/Sliverkiss/GoodNight/main/notice.json','\x20>>\x20Check\x20ck\x20error!','random','ckStatus','catch','个账号'];_0x1728=function(){return _0x4d77f4;};return _0x1728();}const _0x4ebc4c=_0xd501;(function(_0x5c497d,_0x24ee09){const _0x10f0bd=_0xd501,_0xb9408d=_0x5c497d();while(!![]){try{const _0x3b088e=-parseInt(_0x10f0bd(0xa2))/0x1+-parseInt(_0x10f0bd(0x9d))/0x2+parseInt(_0x10f0bd(0xa1))/0x3+parseInt(_0x10f0bd(0x80))/0x4+-parseInt(_0x10f0bd(0xad))/0x5*(parseInt(_0x10f0bd(0xbd))/0x6)+-parseInt(_0x10f0bd(0x8f))/0x7+parseInt(_0x10f0bd(0xb2))/0x8;if(_0x3b088e===_0x24ee09)break;else _0xb9408d['push'](_0xb9408d['shift']());}catch(_0x5ec912){_0xb9408d['push'](_0xb9408d['shift']());}}}(_0x1728,0x70059));const $=new Env(_0x4ebc4c(0xbe)),ckName=_0x4ebc4c(0x99),Notify=0x1,notify=$['isNode']()?require(_0x4ebc4c(0x7e)):'';let envSplitor=['@'],userCookie=($['isNode']()?process['env'][ckName]:$[_0x4ebc4c(0xb3)](ckName))||'',userList=[],userIdx=0x0,userCount=0x0;$['notifyMsg']=[],$[_0x4ebc4c(0xbf)]=($[_0x4ebc4c(0xa8)]()?process['env'][_0x4ebc4c(0x91)]:$['getdata'](_0x4ebc4c(0x91)))||'';async function main(){const _0x1de906=_0x4ebc4c;await getNotice(),console[_0x1de906(0xba)](_0x1de906(0x9f));let _0x23be91=[];for(let _0xa4d2e7 of userList){console[_0x1de906(0xba)](_0x1de906(0x87)+_0xa4d2e7[_0x1de906(0xbb)]+'\x20>>\x20Start\x20check\x20CK'),_0x23be91[_0x1de906(0x82)](await _0xa4d2e7[_0x1de906(0xb7)]()),await $[_0x1de906(0x7f)](_0xa4d2e7[_0x1de906(0xb0)]());}await Promise[_0x1de906(0xa0)](_0x23be91),console[_0x1de906(0xba)]('\x0a==================\x20任务\x20==================\x0a'),_0x23be91=[];for(let _0x53a33d of userList){_0x53a33d['ckStatus']?(DoubleLog(_0x1de906(0x87)+_0x53a33d[_0x1de906(0xbb)]+'\x20>>\x20Start\x20work'),console[_0x1de906(0xba)](_0x1de906(0x98)+_0x53a33d['getRandomTime']()+'ms'),_0x23be91[_0x1de906(0x82)](await _0x53a33d[_0x1de906(0xa5)]()),await $[_0x1de906(0x7f)](_0x53a33d['getRandomTime']()),_0x23be91[_0x1de906(0x82)](await _0x53a33d['point']()),await $[_0x1de906(0x7f)](_0x53a33d[_0x1de906(0xb0)]())):$[_0x1de906(0xb8)][_0x1de906(0x82)](_0x1de906(0x8e)+_0x53a33d[_0x1de906(0xbb)]+_0x1de906(0x89));}await Promise[_0x1de906(0xa0)](_0x23be91);}class UserInfo{constructor(_0x1e1b98){const _0x1b80c8=_0x4ebc4c;this[_0x1b80c8(0xbb)]=++userIdx,this[_0x1b80c8(0x94)]=_0x1e1b98,this[_0x1b80c8(0x8b)]=!![],this[_0x1b80c8(0x90)]={'Content-Type':_0x1b80c8(0x83)};}[_0x4ebc4c(0xb0)](){return randomInt(0x3e8,0xbb8);}async[_0x4ebc4c(0xa5)](){const _0xb5ded1=_0x4ebc4c;try{const _0x4b664f={'url':_0xb5ded1(0x95)+this[_0xb5ded1(0x94)]+_0xb5ded1(0xa6),'headers':this['headers'],'body':'{}'};let _0x377299=await httpRequest(_0x4b664f);_0x377299?.[_0xb5ded1(0xab)]==0x1?DoubleLog(_0xb5ded1(0x86)+_0x377299?.['scoreadd']+'积分'):DoubleLog('🔶'+_0x377299[_0xb5ded1(0xb6)]);}catch(_0x3abb28){console[_0xb5ded1(0xba)](_0x3abb28);}}async['point'](){const _0x47499a=_0x4ebc4c;let _0x4c4cc6={'url':'https://sc.gdzfxc.com/?s=/ApiMy/scorelog&aid=1&platform=wx&session_id='+this['token']+_0x47499a(0xa6),'headers':this[_0x47499a(0x90)],'body':'{}'},_0x5933f0=await httpRequest(_0x4c4cc6);_0x5933f0?.[_0x47499a(0xab)]==0x1?DoubleLog(_0x47499a(0xb9)+_0x5933f0?.[_0x47499a(0x85)]+'积分'):console[_0x47499a(0xba)](_0x5933f0[_0x47499a(0xae)]);}async[_0x4ebc4c(0xb7)](){const _0x5be466=_0x4ebc4c;let _0x197423={'url':'https://sc.gdzfxc.com/?s=/ApiMy/scorelog&aid=1&platform=wx&session_id='+this[_0x5be466(0x94)]+_0x5be466(0xa6),'headers':this['headers'],'body':'{}'},_0xb3100c=await httpRequest(_0x197423);_0xb3100c?.[_0x5be466(0xab)]==0x1?console[_0x5be466(0xba)](_0x5be466(0xb5)):(this[_0x5be466(0x8b)]=![],console[_0x5be466(0xba)](_0x5be466(0x8e)+this[_0x5be466(0xbb)]+_0x5be466(0xaf)));}}async function getCookie(){const _0x10fd30=_0x4ebc4c;if($request&&$request['method']!=_0x10fd30(0xa3)){const _0xbd7776=$request[_0x10fd30(0x90)][_0x10fd30(0x93)]||$request[_0x10fd30(0x90)][_0x10fd30(0xb4)];_0xbd7776?($[_0x10fd30(0x9e)](_0xbd7776,ckName),$[_0x10fd30(0xb6)]($[_0x10fd30(0x7d)],'','获取签到Cookie成功🎉')):$[_0x10fd30(0xb6)]($['name'],'',_0x10fd30(0x9c));}}async function getNotice(){const _0x380101=_0x4ebc4c;try{const _0x55f327=[_0x380101(0x88),_0x380101(0x81)];for(const _0x1774be of _0x55f327){const _0x32ea3f={'url':_0x1774be,'headers':{'User-Agent':''}},_0x4aef4e=await httpRequest(_0x32ea3f);if(_0x4aef4e)console[_0x380101(0xba)](_0x4aef4e[_0x380101(0x9b)]);}}catch(_0x160108){console[_0x380101(0xba)](_0x160108);}}!(async()=>{const _0x2cf2d6=_0x4ebc4c;if(typeof $request!=_0x2cf2d6(0xb1)){await getCookie();return;}if(!await checkEnv())throw new Error('❌未检测到ck，请添加环境变量');;userList['length']>0x0&&await main();})()[_0x4ebc4c(0x8c)](_0x1096f7=>$[_0x4ebc4c(0xb8)]['push'](_0x1096f7[_0x4ebc4c(0xae)]||_0x1096f7))[_0x4ebc4c(0x97)](async()=>{const _0x76ff1a=_0x4ebc4c;$[_0x76ff1a(0xbf)]&&await BarkNotify($,$[_0x76ff1a(0xbf)],$['name'],$['notifyMsg']['join']('\x0a'));;await SendMsg($[_0x76ff1a(0xb8)][_0x76ff1a(0x84)]('\x0a')),$[_0x76ff1a(0xbc)]();});function DoubleLog(_0x563c41){const _0xcdd521=_0x4ebc4c;$[_0xcdd521(0xa8)]()?_0x563c41&&(console[_0xcdd521(0xba)](''+_0x563c41),$['notifyMsg'][_0xcdd521(0x82)](''+_0x563c41)):(console[_0xcdd521(0xba)](''+_0x563c41),$[_0xcdd521(0xb8)][_0xcdd521(0x82)](''+_0x563c41));}function toParams(_0x46b6cf){const _0x37705e=_0x4ebc4c;var _0x8ed75e=Object[_0x37705e(0x92)](_0x46b6cf)[_0x37705e(0xa7)](function(_0x142d59){return encodeURIComponent(_0x142d59)+'='+encodeURIComponent(_0x46b6cf[_0x142d59]);})[_0x37705e(0x84)]('&');return _0x8ed75e;}async function checkEnv(){const _0x7eadee=_0x4ebc4c;if(userCookie){let _0x6b091=envSplitor[0x0];for(let _0x2d7f69 of envSplitor)if(userCookie[_0x7eadee(0x96)](_0x2d7f69)>-0x1){_0x6b091=_0x2d7f69;break;}for(let _0x4939ad of userCookie[_0x7eadee(0x9a)](_0x6b091))_0x4939ad&&userList[_0x7eadee(0x82)](new UserInfo(_0x4939ad));userCount=userList[_0x7eadee(0xaa)];}else{console['log']('未找到CK');return;}return console[_0x7eadee(0xba)](_0x7eadee(0xa9)+userCount+_0x7eadee(0x8d)),!![];}function randomInt(_0x5e0a65,_0x489142){const _0x93b690=_0x4ebc4c;return Math[_0x93b690(0xac)](Math[_0x93b690(0x8a)]()*(_0x489142-_0x5e0a65)+_0x5e0a65);}function _0xd501(_0x5e1ab3,_0x58c364){const _0x1728dd=_0x1728();return _0xd501=function(_0xd5015e,_0x2ed4fb){_0xd5015e=_0xd5015e-0x7d;let _0x1c7469=_0x1728dd[_0xd5015e];return _0x1c7469;},_0xd501(_0x5e1ab3,_0x58c364);}async function SendMsg(_0x36b269){const _0x525f6a=_0x4ebc4c;if(!_0x36b269)return;Notify>0x0?$[_0x525f6a(0xa8)]()?await notify[_0x525f6a(0xa4)]($[_0x525f6a(0x7d)],_0x36b269):$[_0x525f6a(0xb6)]($['name'],'',_0x36b269):console[_0x525f6a(0xba)](_0x36b269);}
/** ---------------------------------固定不动区域----------------------------------------- */
// prettier-ignore

//请求函数函数二次封装
function httpRequest(options, method) { typeof (method) === 'undefined' ? ('body' in options ? method = 'post' : method = 'get') : method = method; return new Promise((resolve) => { $[method](options, (err, resp, data) => { try { if (err) { console.log(`${method}请求失败`); $.logErr(err) } else { if (data) { typeof JSON.parse(data) == 'object' ? data = JSON.parse(data) : data = data; resolve(data) } else { console.log(`请求api返回数据为空，请检查自身原因`) } } } catch (e) { $.logErr(e, resp) } finally { resolve() } }) }) }
//Bark APP notify
async function BarkNotify(c, k, t, b) { for (let i = 0; i < 3; i++) { console.log(`🔷Bark notify >> Start push (${i + 1})`); const s = await new Promise((n) => { c.post({ url: 'https://api.day.app/push', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ title: t, body: b, device_key: k, ext_params: { group: t } }) }, (e, r, d) => r && r.status == 200 ? n(1) : n(d || e)) }); if (s === 1) { console.log('✅Push success!'); break } else { console.log(`❌Push failed! >> ${s.message || s}`) } } };
//From chavyleung's Env.js
function Env(t, e) { class s { constructor(t) { this.env = t } send(t, e = "GET") { t = "string" == typeof t ? { url: t } : t; let s = this.get; return "POST" === e && (s = this.post), new Promise((e, a) => { s.call(this, t, (t, s, r) => { t ? a(t) : e(s) }) }) } get(t) { return this.send.call(this.env, t) } post(t) { return this.send.call(this.env, t, "POST") } } return new class { constructor(t, e) { this.name = t, this.http = new s(this), this.data = null, this.dataFile = "box.dat", this.logs = [], this.isMute = !1, this.isNeedRewrite = !1, this.logSeparator = "\n", this.encoding = "utf-8", this.startTime = (new Date).getTime(), Object.assign(this, e), this.log("", `🔔${this.name}, 开始!`) } getEnv() { return "undefined" != typeof $environment && $environment["surge-version"] ? "Surge" : "undefined" != typeof $environment && $environment["stash-version"] ? "Stash" : "undefined" != typeof module && module.exports ? "Node.js" : "undefined" != typeof $task ? "Quantumult X" : "undefined" != typeof $loon ? "Loon" : "undefined" != typeof $rocket ? "Shadowrocket" : void 0 } isNode() { return "Node.js" === this.getEnv() } isQuanX() { return "Quantumult X" === this.getEnv() } isSurge() { return "Surge" === this.getEnv() } isLoon() { return "Loon" === this.getEnv() } isShadowrocket() { return "Shadowrocket" === this.getEnv() } isStash() { return "Stash" === this.getEnv() } toObj(t, e = null) { try { return JSON.parse(t) } catch { return e } } toStr(t, e = null) { try { return JSON.stringify(t) } catch { return e } } getjson(t, e) { let s = e; const a = this.getdata(t); if (a) try { s = JSON.parse(this.getdata(t)) } catch { } return s } setjson(t, e) { try { return this.setdata(JSON.stringify(t), e) } catch { return !1 } } getScript(t) { return new Promise(e => { this.get({ url: t }, (t, s, a) => e(a)) }) } runScript(t, e) { return new Promise(s => { let a = this.getdata("@chavy_boxjs_userCfgs.httpapi"); a = a ? a.replace(/\n/g, "").trim() : a; let r = this.getdata("@chavy_boxjs_userCfgs.httpapi_timeout"); r = r ? 1 * r : 20, r = e && e.timeout ? e.timeout : r; const [i, o] = a.split("@"), n = { url: `http://${o}/v1/scripting/evaluate`, body: { script_text: t, mock_type: "cron", timeout: r }, headers: { "X-Key": i, Accept: "*/*" }, timeout: r }; this.post(n, (t, e, a) => s(a)) }).catch(t => this.logErr(t)) } loaddata() { if (!this.isNode()) return {}; { this.fs = this.fs ? this.fs : require("fs"), this.path = this.path ? this.path : require("path"); const t = this.path.resolve(this.dataFile), e = this.path.resolve(process.cwd(), this.dataFile), s = this.fs.existsSync(t), a = !s && this.fs.existsSync(e); if (!s && !a) return {}; { const a = s ? t : e; try { return JSON.parse(this.fs.readFileSync(a)) } catch (t) { return {} } } } } writedata() { if (this.isNode()) { this.fs = this.fs ? this.fs : require("fs"), this.path = this.path ? this.path : require("path"); const t = this.path.resolve(this.dataFile), e = this.path.resolve(process.cwd(), this.dataFile), s = this.fs.existsSync(t), a = !s && this.fs.existsSync(e), r = JSON.stringify(this.data); s ? this.fs.writeFileSync(t, r) : a ? this.fs.writeFileSync(e, r) : this.fs.writeFileSync(t, r) } } lodash_get(t, e, s) { const a = e.replace(/\[(\d+)\]/g, ".$1").split("."); let r = t; for (const t of a) if (r = Object(r)[t], void 0 === r) return s; return r } lodash_set(t, e, s) { return Object(t) !== t ? t : (Array.isArray(e) || (e = e.toString().match(/[^.[\]]+/g) || []), e.slice(0, -1).reduce((t, s, a) => Object(t[s]) === t[s] ? t[s] : t[s] = Math.abs(e[a + 1]) >> 0 == +e[a + 1] ? [] : {}, t)[e[e.length - 1]] = s, t) } getdata(t) { let e = this.getval(t); if (/^@/.test(t)) { const [, s, a] = /^@(.*?)\.(.*?)$/.exec(t), r = s ? this.getval(s) : ""; if (r) try { const t = JSON.parse(r); e = t ? this.lodash_get(t, a, "") : e } catch (t) { e = "" } } return e } setdata(t, e) { let s = !1; if (/^@/.test(e)) { const [, a, r] = /^@(.*?)\.(.*?)$/.exec(e), i = this.getval(a), o = a ? "null" === i ? null : i || "{}" : "{}"; try { const e = JSON.parse(o); this.lodash_set(e, r, t), s = this.setval(JSON.stringify(e), a) } catch (e) { const i = {}; this.lodash_set(i, r, t), s = this.setval(JSON.stringify(i), a) } } else s = this.setval(t, e); return s } getval(t) { switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": return $persistentStore.read(t); case "Quantumult X": return $prefs.valueForKey(t); case "Node.js": return this.data = this.loaddata(), this.data[t]; default: return this.data && this.data[t] || null } } setval(t, e) { switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": return $persistentStore.write(t, e); case "Quantumult X": return $prefs.setValueForKey(t, e); case "Node.js": return this.data = this.loaddata(), this.data[e] = t, this.writedata(), !0; default: return this.data && this.data[e] || null } } initGotEnv(t) { this.got = this.got ? this.got : require("got"), this.cktough = this.cktough ? this.cktough : require("tough-cookie"), this.ckjar = this.ckjar ? this.ckjar : new this.cktough.CookieJar, t && (t.headers = t.headers ? t.headers : {}, void 0 === t.headers.Cookie && void 0 === t.cookieJar && (t.cookieJar = this.ckjar)) } get(t, e = (() => { })) { switch (t.headers && (delete t.headers["Content-Type"], delete t.headers["Content-Length"], delete t.headers["content-type"], delete t.headers["content-length"]), t.params && (t.url += "?" + this.queryStr(t.params)), this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": default: this.isSurge() && this.isNeedRewrite && (t.headers = t.headers || {}, Object.assign(t.headers, { "X-Surge-Skip-Scripting": !1 })), $httpClient.get(t, (t, s, a) => { !t && s && (s.body = a, s.statusCode = s.status ? s.status : s.statusCode, s.status = s.statusCode), e(t, s, a) }); break; case "Quantumult X": this.isNeedRewrite && (t.opts = t.opts || {}, Object.assign(t.opts, { hints: !1 })), $task.fetch(t).then(t => { const { statusCode: s, statusCode: a, headers: r, body: i, bodyBytes: o } = t; e(null, { status: s, statusCode: a, headers: r, body: i, bodyBytes: o }, i, o) }, t => e(t && t.error || "UndefinedError")); break; case "Node.js": let s = require("iconv-lite"); this.initGotEnv(t), this.got(t).on("redirect", (t, e) => { try { if (t.headers["set-cookie"]) { const s = t.headers["set-cookie"].map(this.cktough.Cookie.parse).toString(); s && this.ckjar.setCookieSync(s, null), e.cookieJar = this.ckjar } } catch (t) { this.logErr(t) } }).then(t => { const { statusCode: a, statusCode: r, headers: i, rawBody: o } = t, n = s.decode(o, this.encoding); e(null, { status: a, statusCode: r, headers: i, rawBody: o, body: n }, n) }, t => { const { message: a, response: r } = t; e(a, r, r && s.decode(r.rawBody, this.encoding)) }) } } post(t, e = (() => { })) { const s = t.method ? t.method.toLocaleLowerCase() : "post"; switch (t.body && t.headers && !t.headers["Content-Type"] && !t.headers["content-type"] && (t.headers["content-type"] = "application/x-www-form-urlencoded"), t.headers && (delete t.headers["Content-Length"], delete t.headers["content-length"]), this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": default: this.isSurge() && this.isNeedRewrite && (t.headers = t.headers || {}, Object.assign(t.headers, { "X-Surge-Skip-Scripting": !1 })), $httpClient[s](t, (t, s, a) => { !t && s && (s.body = a, s.statusCode = s.status ? s.status : s.statusCode, s.status = s.statusCode), e(t, s, a) }); break; case "Quantumult X": t.method = s, this.isNeedRewrite && (t.opts = t.opts || {}, Object.assign(t.opts, { hints: !1 })), $task.fetch(t).then(t => { const { statusCode: s, statusCode: a, headers: r, body: i, bodyBytes: o } = t; e(null, { status: s, statusCode: a, headers: r, body: i, bodyBytes: o }, i, o) }, t => e(t && t.error || "UndefinedError")); break; case "Node.js": let a = require("iconv-lite"); this.initGotEnv(t); const { url: r, ...i } = t; this.got[s](r, i).then(t => { const { statusCode: s, statusCode: r, headers: i, rawBody: o } = t, n = a.decode(o, this.encoding); e(null, { status: s, statusCode: r, headers: i, rawBody: o, body: n }, n) }, t => { const { message: s, response: r } = t; e(s, r, r && a.decode(r.rawBody, this.encoding)) }) } } time(t, e = null) { const s = e ? new Date(e) : new Date; let a = { "M+": s.getMonth() + 1, "d+": s.getDate(), "H+": s.getHours(), "m+": s.getMinutes(), "s+": s.getSeconds(), "q+": Math.floor((s.getMonth() + 3) / 3), S: s.getMilliseconds() }; /(y+)/.test(t) && (t = t.replace(RegExp.$1, (s.getFullYear() + "").substr(4 - RegExp.$1.length))); for (let e in a) new RegExp("(" + e + ")").test(t) && (t = t.replace(RegExp.$1, 1 == RegExp.$1.length ? a[e] : ("00" + a[e]).substr(("" + a[e]).length))); return t } queryStr(t) { let e = ""; for (const s in t) { let a = t[s]; null != a && "" !== a && ("object" == typeof a && (a = JSON.stringify(a)), e += `${s}=${a}&`) } return e = e.substring(0, e.length - 1), e } msg(e = t, s = "", a = "", r) { const i = t => { switch (typeof t) { case void 0: return t; case "string": switch (this.getEnv()) { case "Surge": case "Stash": default: return { url: t }; case "Loon": case "Shadowrocket": return t; case "Quantumult X": return { "open-url": t }; case "Node.js": return }case "object": switch (this.getEnv()) { case "Surge": case "Stash": case "Shadowrocket": default: { let e = t.url || t.openUrl || t["open-url"]; return { url: e } } case "Loon": { let e = t.openUrl || t.url || t["open-url"], s = t.mediaUrl || t["media-url"]; return { openUrl: e, mediaUrl: s } } case "Quantumult X": { let e = t["open-url"] || t.url || t.openUrl, s = t["media-url"] || t.mediaUrl, a = t["update-pasteboard"] || t.updatePasteboard; return { "open-url": e, "media-url": s, "update-pasteboard": a } } case "Node.js": return }default: return } }; if (!this.isMute) switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": default: $notification.post(e, s, a, i(r)); break; case "Quantumult X": $notify(e, s, a, i(r)); break; case "Node.js": }if (!this.isMuteLog) { let t = ["", "==============📣系统通知📣=============="]; t.push(e), s && t.push(s), a && t.push(a), console.log(t.join("\n")), this.logs = this.logs.concat(t) } } log(...t) { t.length > 0 && (this.logs = [...this.logs, ...t]), console.log(t.join(this.logSeparator)) } logErr(t, e) { switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": case "Quantumult X": default: this.log("", `❗️${this.name}, 错误!`, t); break; case "Node.js": this.log("", `❗️${this.name}, 错误!`, t.stack) } } wait(t) { return new Promise(e => setTimeout(e, t)) } done(t = {}) { const e = (new Date).getTime(), s = (e - this.startTime) / 1e3; switch (this.log("", `🔔${this.name}, 结束! 🕛 ${s} 秒`), this.log(), this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": case "Quantumult X": default: $done(t); break; case "Node.js": process.exit(1) } } }(t, e) }
