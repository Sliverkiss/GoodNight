/**************************************

脚本名称：微信小程序 沪上阿姨 签到
脚本作者：@Sliverkiss
更新日期：2023.08.28 16:40:11

脚本兼容：Surge、QuantumultX、Loon、Shadowrocket、Node.js
只测试过loon和青龙，其它环境请自行尝试

*************************
【 签到脚本使用教程 】:
*************************

青龙：
1.登录后抓包 webapi.qmai.cn域名下的Qm-User-Token，填写到hsay_data,多账号用 @ 分割
2.可选推送：将bark的key填写到bark_key，不填默认使用青龙自带的推送

Loon: 
1.打开小程序，登录后抓包 webapi.qmai.cn域名下的Qm-User-Token。
2.打开boxjs->我的->数据查看器->在数据键输入hsay_data->VIEW，将Qm-User-Token填写到数据内容，点击保存,多账号用@分割;
ps：由于奶茶类小程序的接口用的都是同一家，如霸王茶姬和沪上阿姨，获取ck脚本会产生冲突，因此只建议手动抓取。

------------------------------------------
1、此脚本仅用于学习研究，不保证其合法性、准确性、有效性，请根据情况自行判断，本人对此不承担任何保证责任。
2、由于此脚本仅用于学习研究，您必须在下载后 24 小时内将所有内容从您的计算机或手机或任何存储设备中完全删除，若违反规定引起任何事件本人对此均不负责。
3、请勿将此脚本用于任何商业或非法目的，若违反规定请自行对此负责。
4、此脚本涉及应用与本人无关，本人对因此引起的任何隐私泄漏或其他后果不承担任何责任。
5、本人对任何脚本引发的问题概不负责，包括但不限于由脚本错误引起的任何损失和损害。
6、如果任何单位或个人认为此脚本可能涉嫌侵犯其权利，应及时通知并提供身份证明，所有权证明，我们将在收到认证文件确认后删除此脚本。
7、所有直接或间接使用、查看此脚本的人均应该仔细阅读此声明。本人保留随时更改或补充此声明的权利。一旦您使用或复制了此脚本，即视为您已接受此免责声明。

******************************************/

// env.js 全局
function _0x5412(){const _0x5531bb=['\x20>>\x20Check\x20ck\x20error!','keys','\x20>>\x20Start\x20work','done','./sendNotify','\x0a==================\x20任务\x20==================\x0a','undefined','hsay_data','all','❌账号','bark_key','沪上阿姨','9ntFSUK','https://webapi.qmai.cn/web/catering/crm/points-info','934160yALoZh','151386eVMfnF','length','825810ErFbLA','❌未检测到ck，请添加环境变量','env','split','个账号','indexOf','isNode','✅目前积分为','message','235HdpHzN','https://raw.githubusercontent.com/Sliverkiss/GoodNight/main/tip.json','body','index','获取签到Cookie成功🎉','barkKey','getRandomTime','push','702822503017398273','https://raw.githubusercontent.com/Sliverkiss/GoodNight/main/notice.json','TOOKEN','wait','OPTIONS','code','method','ckStatus','random','log','9076bsFfqL','未找到CK','14662PhhiBA','14fvoVDI','notifyMsg','totalPoints','name','wxd92a2d29f8022f40','https://webapi.qmai.cn/web/catering/integral/sign/signIn','data','37GgYLWs','🔷账号','catch','setdata','900190QnpzUt','signin','token','5669103wsVczC','join','sendNotify','msg','finally','application/json','point','headers'];_0x5412=function(){return _0x5531bb;};return _0x5412();}const _0x424f58=_0x17ab;(function(_0x1383ce,_0x4fee4b){const _0x53c2ee=_0x17ab,_0x2aa163=_0x1383ce();while(!![]){try{const _0x2fd0b4=parseInt(_0x53c2ee(0xa0))/0x1*(-parseInt(_0x53c2ee(0xdd))/0x2)+-parseInt(_0x53c2ee(0xc0))/0x3+-parseInt(_0x53c2ee(0xdb))/0x4*(-parseInt(_0x53c2ee(0xc9))/0x5)+parseInt(_0x53c2ee(0xbe))/0x6*(parseInt(_0x53c2ee(0xde))/0x7)+-parseInt(_0x53c2ee(0xbd))/0x8*(-parseInt(_0x53c2ee(0xbb))/0x9)+-parseInt(_0x53c2ee(0xa4))/0xa+parseInt(_0x53c2ee(0xa7))/0xb;if(_0x2fd0b4===_0x4fee4b)break;else _0x2aa163['push'](_0x2aa163['shift']());}catch(_0x1eb2c6){_0x2aa163['push'](_0x2aa163['shift']());}}}(_0x5412,0x25488));const $=new Env(_0x424f58(0xba)),ckName=_0x424f58(0xb6),Notify=0x1,notify=$['isNode']()?require(_0x424f58(0xb3)):'';let envSplitor=['@'],userCookie=($[_0x424f58(0xc6)]()?process[_0x424f58(0xc2)][ckName]:$['getdata'](ckName))||'',userList=[],userIdx=0x0,userCount=0x0;$['notifyMsg']=[],$[_0x424f58(0xce)]=($[_0x424f58(0xc6)]()?process['env']['bark_key']:$['getdata'](_0x424f58(0xb9)))||'';async function main(){const _0x3d4728=_0x424f58;await getNotice(),console[_0x3d4728(0xda)](_0x3d4728(0xb4));let _0x2f0f39=[];for(let _0x377227 of userList){_0x377227['ckStatus']==!![]?(DoubleLog(_0x3d4728(0xa1)+_0x377227[_0x3d4728(0xcc)]+_0x3d4728(0xb1)),console['log']('随机延迟'+_0x377227[_0x3d4728(0xcf)]()+'ms'),_0x2f0f39[_0x3d4728(0xd0)](await _0x377227[_0x3d4728(0xa5)]()),await $[_0x3d4728(0xd4)](_0x377227[_0x3d4728(0xcf)]()),_0x2f0f39[_0x3d4728(0xd0)](await _0x377227[_0x3d4728(0xad)]()),await $[_0x3d4728(0xd4)](_0x377227['getRandomTime']())):$[_0x3d4728(0xdf)][_0x3d4728(0xd0)](_0x3d4728(0xb8)+_0x377227[_0x3d4728(0xcc)]+_0x3d4728(0xaf));}await Promise[_0x3d4728(0xb7)](_0x2f0f39);}class UserInfo{constructor(_0x3e5f66){const _0x23345e=_0x424f58;this[_0x23345e(0xcc)]=++userIdx,this['ck']=_0x3e5f66,this[_0x23345e(0xd8)]=!![],this['readStatus']=!![],this['headers']={'Qm-User-Token':this['ck'],'Qm-From':'wechat','Content-Type':_0x23345e(0xac)},this[_0x23345e(0xcb)]={'appid':_0x23345e(0xe2),'mobilePhone':'\x20','activityId':_0x23345e(0xd1),'userName':'\x20'};}[_0x424f58(0xcf)](){return randomInt(0x3e8,0xbb8);}async[_0x424f58(0xa5)](){const _0x13c44b=_0x424f58;try{const _0x526247={'url':_0x13c44b(0xe3),'headers':this[_0x13c44b(0xae)],'body':this[_0x13c44b(0xcb)]};let _0x4fbdd6=await httpRequest(_0x526247);_0x4fbdd6?.[_0x13c44b(0xd6)]==0x0?DoubleLog('✅'+_0x4fbdd6?.['messageg']):(DoubleLog('🔶'+(_0x4fbdd6?.['message']||'❌签到失败！')),console[_0x13c44b(0xda)](_0x4fbdd6));}catch(_0x535b4d){console[_0x13c44b(0xda)](_0x535b4d);}}async['point'](){const _0x1c57ad=_0x424f58;try{const _0x5e1bb7={'url':_0x1c57ad(0xbc),'headers':this['headers'],'body':this['body']};let _0x206a37=await httpRequest(_0x5e1bb7);console[_0x1c57ad(0xda)](_0x206a37),DoubleLog(_0x1c57ad(0xc7)+_0x206a37?.[_0x1c57ad(0xe4)]?.[_0x1c57ad(0xe0)]);}catch(_0x327354){console[_0x1c57ad(0xda)](_0x327354);}}}async function getCookie(){const _0x42d16a=_0x424f58;if($request&&$request[_0x42d16a(0xd7)]!=_0x42d16a(0xd5)){const _0x1e2a27=$request['headers']['Token']||$request[_0x42d16a(0xae)][_0x42d16a(0xa6)]||$request[_0x42d16a(0xae)][_0x42d16a(0xd3)];_0x1e2a27?($[_0x42d16a(0xa3)](_0x1e2a27,ckName),$[_0x42d16a(0xaa)]($[_0x42d16a(0xe1)],'',_0x42d16a(0xcd))):$[_0x42d16a(0xaa)]($[_0x42d16a(0xe1)],'','错误获取签到Cookie失败');}}!(async()=>{const _0x4bcfd8=_0x424f58;if(typeof $request!=_0x4bcfd8(0xb5)){await getCookie();return;}if(!await checkEnv())throw new Error(_0x4bcfd8(0xc1));;userList[_0x4bcfd8(0xbf)]>0x0&&await main();$[_0x4bcfd8(0xce)]&&await BarkNotify($,$[_0x4bcfd8(0xce)],$[_0x4bcfd8(0xe1)],$['notifyMsg']['join']('\x0a'));;})()[_0x424f58(0xa2)](_0x4040d2=>$['notifyMsg'][_0x424f58(0xd0)](_0x4040d2[_0x424f58(0xc8)]||_0x4040d2))[_0x424f58(0xab)](async()=>{const _0x566a92=_0x424f58;await SendMsg($[_0x566a92(0xdf)][_0x566a92(0xa8)]('\x0a')),$[_0x566a92(0xb2)]();});function DoubleLog(_0x2109f5){const _0x26cd07=_0x424f58;$[_0x26cd07(0xc6)]()?_0x2109f5&&(console['log'](''+_0x2109f5),$[_0x26cd07(0xdf)][_0x26cd07(0xd0)](''+_0x2109f5)):(console[_0x26cd07(0xda)](''+_0x2109f5),$[_0x26cd07(0xdf)][_0x26cd07(0xd0)](''+_0x2109f5));}function toParams(_0x110f41){const _0xa63516=_0x424f58;var _0x338b4c=Object[_0xa63516(0xb0)](_0x110f41)['map'](function(_0x54435b){return encodeURIComponent(_0x54435b)+'='+encodeURIComponent(_0x110f41[_0x54435b]);})[_0xa63516(0xa8)]('&');return _0x338b4c;}async function checkEnv(){const _0x412f1a=_0x424f58;if(userCookie){let _0xd1758d=envSplitor[0x0];for(let _0x568e18 of envSplitor)if(userCookie[_0x412f1a(0xc5)](_0x568e18)>-0x1){_0xd1758d=_0x568e18;break;}for(let _0x33c098 of userCookie[_0x412f1a(0xc3)](_0xd1758d))_0x33c098&&userList[_0x412f1a(0xd0)](new UserInfo(_0x33c098));userCount=userList[_0x412f1a(0xbf)];}else{console[_0x412f1a(0xda)](_0x412f1a(0xdc));return;}return console[_0x412f1a(0xda)]('共找到'+userCount+_0x412f1a(0xc4)),!![];}function randomInt(_0x236639,_0x57abca){const _0x39038=_0x424f58;return Math['round'](Math[_0x39038(0xd9)]()*(_0x57abca-_0x236639)+_0x236639);}async function SendMsg(_0x986738){const _0x3a3b39=_0x424f58;if(!_0x986738)return;Notify>0x0?$['isNode']()?await notify[_0x3a3b39(0xa9)]($[_0x3a3b39(0xe1)],_0x986738):$[_0x3a3b39(0xaa)]($[_0x3a3b39(0xe1)],'',_0x986738):console[_0x3a3b39(0xda)](_0x986738);}function _0x17ab(_0x26839c,_0x50e1bc){const _0x541227=_0x5412();return _0x17ab=function(_0x17abe6,_0x59b9ac){_0x17abe6=_0x17abe6-0xa0;let _0x30a7cb=_0x541227[_0x17abe6];return _0x30a7cb;},_0x17ab(_0x26839c,_0x50e1bc);}async function getNotice(){const _0x327ad1=_0x424f58;try{const _0x3b57e9=[_0x327ad1(0xd2),_0x327ad1(0xca)];for(const _0x28db69 of _0x3b57e9){const _0x3b13c3={'url':_0x28db69,'headers':{'User-Agent':''}},_0xde460=await httpRequest(_0x3b13c3);if(_0xde460)console['log'](_0xde460['notice']);}}catch(_0x589916){console[_0x327ad1(0xda)](_0x589916);}}
/** ---------------------------------固定不动区域----------------------------------------- */
// prettier-ignore

//请求函数函数二次封装
function httpRequest(options, method) { typeof (method) === 'undefined' ? ('body' in options ? method = 'post' : method = 'get') : method = method; return new Promise((resolve) => { $[method](options, (err, resp, data) => { try { if (err) { console.log(`${method}请求失败`); $.logErr(err) } else { if (data) { typeof JSON.parse(data) == 'object' ? data = JSON.parse(data) : data = data; resolve(data) } else { console.log(`请求api返回数据为空，请检查自身原因`) } } } catch (e) { $.logErr(e, resp) } finally { resolve() } }) }) }
//Bark APP notify
async function BarkNotify(c, k, t, b) { for (let i = 0; i < 3; i++) { console.log(`🔷Bark notify >> Start push (${i + 1})`); const s = await new Promise((n) => { c.post({ url: 'https://api.day.app/push', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ title: t, body: b, device_key: k, ext_params: { group: t } }) }, (e, r, d) => r && r.status == 200 ? n(1) : n(d || e)) }); if (s === 1) { console.log('✅Push success!'); break } else { console.log(`❌Push failed! >> ${s.message || s}`) } } };
//From chavyleung's Env.js
function Env(t, e) { class s { constructor(t) { this.env = t } send(t, e = "GET") { t = "string" == typeof t ? { url: t } : t; let s = this.get; return "POST" === e && (s = this.post), new Promise((e, a) => { s.call(this, t, (t, s, r) => { t ? a(t) : e(s) }) }) } get(t) { return this.send.call(this.env, t) } post(t) { return this.send.call(this.env, t, "POST") } } return new class { constructor(t, e) { this.name = t, this.http = new s(this), this.data = null, this.dataFile = "box.dat", this.logs = [], this.isMute = !1, this.isNeedRewrite = !1, this.logSeparator = "\n", this.encoding = "utf-8", this.startTime = (new Date).getTime(), Object.assign(this, e), this.log("", `🔔${this.name}, 开始!`) } getEnv() { return "undefined" != typeof $environment && $environment["surge-version"] ? "Surge" : "undefined" != typeof $environment && $environment["stash-version"] ? "Stash" : "undefined" != typeof module && module.exports ? "Node.js" : "undefined" != typeof $task ? "Quantumult X" : "undefined" != typeof $loon ? "Loon" : "undefined" != typeof $rocket ? "Shadowrocket" : void 0 } isNode() { return "Node.js" === this.getEnv() } isQuanX() { return "Quantumult X" === this.getEnv() } isSurge() { return "Surge" === this.getEnv() } isLoon() { return "Loon" === this.getEnv() } isShadowrocket() { return "Shadowrocket" === this.getEnv() } isStash() { return "Stash" === this.getEnv() } toObj(t, e = null) { try { return JSON.parse(t) } catch { return e } } toStr(t, e = null) { try { return JSON.stringify(t) } catch { return e } } getjson(t, e) { let s = e; const a = this.getdata(t); if (a) try { s = JSON.parse(this.getdata(t)) } catch { } return s } setjson(t, e) { try { return this.setdata(JSON.stringify(t), e) } catch { return !1 } } getScript(t) { return new Promise(e => { this.get({ url: t }, (t, s, a) => e(a)) }) } runScript(t, e) { return new Promise(s => { let a = this.getdata("@chavy_boxjs_userCfgs.httpapi"); a = a ? a.replace(/\n/g, "").trim() : a; let r = this.getdata("@chavy_boxjs_userCfgs.httpapi_timeout"); r = r ? 1 * r : 20, r = e && e.timeout ? e.timeout : r; const [i, o] = a.split("@"), n = { url: `http://${o}/v1/scripting/evaluate`, body: { script_text: t, mock_type: "cron", timeout: r }, headers: { "X-Key": i, Accept: "*/*" }, timeout: r }; this.post(n, (t, e, a) => s(a)) }).catch(t => this.logErr(t)) } loaddata() { if (!this.isNode()) return {}; { this.fs = this.fs ? this.fs : require("fs"), this.path = this.path ? this.path : require("path"); const t = this.path.resolve(this.dataFile), e = this.path.resolve(process.cwd(), this.dataFile), s = this.fs.existsSync(t), a = !s && this.fs.existsSync(e); if (!s && !a) return {}; { const a = s ? t : e; try { return JSON.parse(this.fs.readFileSync(a)) } catch (t) { return {} } } } } writedata() { if (this.isNode()) { this.fs = this.fs ? this.fs : require("fs"), this.path = this.path ? this.path : require("path"); const t = this.path.resolve(this.dataFile), e = this.path.resolve(process.cwd(), this.dataFile), s = this.fs.existsSync(t), a = !s && this.fs.existsSync(e), r = JSON.stringify(this.data); s ? this.fs.writeFileSync(t, r) : a ? this.fs.writeFileSync(e, r) : this.fs.writeFileSync(t, r) } } lodash_get(t, e, s) { const a = e.replace(/\[(\d+)\]/g, ".$1").split("."); let r = t; for (const t of a) if (r = Object(r)[t], void 0 === r) return s; return r } lodash_set(t, e, s) { return Object(t) !== t ? t : (Array.isArray(e) || (e = e.toString().match(/[^.[\]]+/g) || []), e.slice(0, -1).reduce((t, s, a) => Object(t[s]) === t[s] ? t[s] : t[s] = Math.abs(e[a + 1]) >> 0 == +e[a + 1] ? [] : {}, t)[e[e.length - 1]] = s, t) } getdata(t) { let e = this.getval(t); if (/^@/.test(t)) { const [, s, a] = /^@(.*?)\.(.*?)$/.exec(t), r = s ? this.getval(s) : ""; if (r) try { const t = JSON.parse(r); e = t ? this.lodash_get(t, a, "") : e } catch (t) { e = "" } } return e } setdata(t, e) { let s = !1; if (/^@/.test(e)) { const [, a, r] = /^@(.*?)\.(.*?)$/.exec(e), i = this.getval(a), o = a ? "null" === i ? null : i || "{}" : "{}"; try { const e = JSON.parse(o); this.lodash_set(e, r, t), s = this.setval(JSON.stringify(e), a) } catch (e) { const i = {}; this.lodash_set(i, r, t), s = this.setval(JSON.stringify(i), a) } } else s = this.setval(t, e); return s } getval(t) { switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": return $persistentStore.read(t); case "Quantumult X": return $prefs.valueForKey(t); case "Node.js": return this.data = this.loaddata(), this.data[t]; default: return this.data && this.data[t] || null } } setval(t, e) { switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": return $persistentStore.write(t, e); case "Quantumult X": return $prefs.setValueForKey(t, e); case "Node.js": return this.data = this.loaddata(), this.data[e] = t, this.writedata(), !0; default: return this.data && this.data[e] || null } } initGotEnv(t) { this.got = this.got ? this.got : require("got"), this.cktough = this.cktough ? this.cktough : require("tough-cookie"), this.ckjar = this.ckjar ? this.ckjar : new this.cktough.CookieJar, t && (t.headers = t.headers ? t.headers : {}, void 0 === t.headers.Cookie && void 0 === t.cookieJar && (t.cookieJar = this.ckjar)) } get(t, e = (() => { })) { switch (t.headers && (delete t.headers["Content-Type"], delete t.headers["Content-Length"], delete t.headers["content-type"], delete t.headers["content-length"]), t.params && (t.url += "?" + this.queryStr(t.params)), this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": default: this.isSurge() && this.isNeedRewrite && (t.headers = t.headers || {}, Object.assign(t.headers, { "X-Surge-Skip-Scripting": !1 })), $httpClient.get(t, (t, s, a) => { !t && s && (s.body = a, s.statusCode = s.status ? s.status : s.statusCode, s.status = s.statusCode), e(t, s, a) }); break; case "Quantumult X": this.isNeedRewrite && (t.opts = t.opts || {}, Object.assign(t.opts, { hints: !1 })), $task.fetch(t).then(t => { const { statusCode: s, statusCode: a, headers: r, body: i, bodyBytes: o } = t; e(null, { status: s, statusCode: a, headers: r, body: i, bodyBytes: o }, i, o) }, t => e(t && t.error || "UndefinedError")); break; case "Node.js": let s = require("iconv-lite"); this.initGotEnv(t), this.got(t).on("redirect", (t, e) => { try { if (t.headers["set-cookie"]) { const s = t.headers["set-cookie"].map(this.cktough.Cookie.parse).toString(); s && this.ckjar.setCookieSync(s, null), e.cookieJar = this.ckjar } } catch (t) { this.logErr(t) } }).then(t => { const { statusCode: a, statusCode: r, headers: i, rawBody: o } = t, n = s.decode(o, this.encoding); e(null, { status: a, statusCode: r, headers: i, rawBody: o, body: n }, n) }, t => { const { message: a, response: r } = t; e(a, r, r && s.decode(r.rawBody, this.encoding)) }) } } post(t, e = (() => { })) { const s = t.method ? t.method.toLocaleLowerCase() : "post"; switch (t.body && t.headers && !t.headers["Content-Type"] && !t.headers["content-type"] && (t.headers["content-type"] = "application/x-www-form-urlencoded"), t.headers && (delete t.headers["Content-Length"], delete t.headers["content-length"]), this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": default: this.isSurge() && this.isNeedRewrite && (t.headers = t.headers || {}, Object.assign(t.headers, { "X-Surge-Skip-Scripting": !1 })), $httpClient[s](t, (t, s, a) => { !t && s && (s.body = a, s.statusCode = s.status ? s.status : s.statusCode, s.status = s.statusCode), e(t, s, a) }); break; case "Quantumult X": t.method = s, this.isNeedRewrite && (t.opts = t.opts || {}, Object.assign(t.opts, { hints: !1 })), $task.fetch(t).then(t => { const { statusCode: s, statusCode: a, headers: r, body: i, bodyBytes: o } = t; e(null, { status: s, statusCode: a, headers: r, body: i, bodyBytes: o }, i, o) }, t => e(t && t.error || "UndefinedError")); break; case "Node.js": let a = require("iconv-lite"); this.initGotEnv(t); const { url: r, ...i } = t; this.got[s](r, i).then(t => { const { statusCode: s, statusCode: r, headers: i, rawBody: o } = t, n = a.decode(o, this.encoding); e(null, { status: s, statusCode: r, headers: i, rawBody: o, body: n }, n) }, t => { const { message: s, response: r } = t; e(s, r, r && a.decode(r.rawBody, this.encoding)) }) } } time(t, e = null) { const s = e ? new Date(e) : new Date; let a = { "M+": s.getMonth() + 1, "d+": s.getDate(), "H+": s.getHours(), "m+": s.getMinutes(), "s+": s.getSeconds(), "q+": Math.floor((s.getMonth() + 3) / 3), S: s.getMilliseconds() }; /(y+)/.test(t) && (t = t.replace(RegExp.$1, (s.getFullYear() + "").substr(4 - RegExp.$1.length))); for (let e in a) new RegExp("(" + e + ")").test(t) && (t = t.replace(RegExp.$1, 1 == RegExp.$1.length ? a[e] : ("00" + a[e]).substr(("" + a[e]).length))); return t } queryStr(t) { let e = ""; for (const s in t) { let a = t[s]; null != a && "" !== a && ("object" == typeof a && (a = JSON.stringify(a)), e += `${s}=${a}&`) } return e = e.substring(0, e.length - 1), e } msg(e = t, s = "", a = "", r) { const i = t => { switch (typeof t) { case void 0: return t; case "string": switch (this.getEnv()) { case "Surge": case "Stash": default: return { url: t }; case "Loon": case "Shadowrocket": return t; case "Quantumult X": return { "open-url": t }; case "Node.js": return }case "object": switch (this.getEnv()) { case "Surge": case "Stash": case "Shadowrocket": default: { let e = t.url || t.openUrl || t["open-url"]; return { url: e } } case "Loon": { let e = t.openUrl || t.url || t["open-url"], s = t.mediaUrl || t["media-url"]; return { openUrl: e, mediaUrl: s } } case "Quantumult X": { let e = t["open-url"] || t.url || t.openUrl, s = t["media-url"] || t.mediaUrl, a = t["update-pasteboard"] || t.updatePasteboard; return { "open-url": e, "media-url": s, "update-pasteboard": a } } case "Node.js": return }default: return } }; if (!this.isMute) switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": default: $notification.post(e, s, a, i(r)); break; case "Quantumult X": $notify(e, s, a, i(r)); break; case "Node.js": }if (!this.isMuteLog) { let t = ["", "==============📣系统通知📣=============="]; t.push(e), s && t.push(s), a && t.push(a), console.log(t.join("\n")), this.logs = this.logs.concat(t) } } log(...t) { t.length > 0 && (this.logs = [...this.logs, ...t]), console.log(t.join(this.logSeparator)) } logErr(t, e) { switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": case "Quantumult X": default: this.log("", `❗️${this.name}, 错误!`, t); break; case "Node.js": this.log("", `❗️${this.name}, 错误!`, t.stack) } } wait(t) { return new Promise(e => setTimeout(e, t)) } done(t = {}) { const e = (new Date).getTime(), s = (e - this.startTime) / 1e3; switch (this.log("", `🔔${this.name}, 结束! 🕛 ${s} 秒`), this.log(), this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": case "Quantumult X": default: $done(t); break; case "Node.js": process.exit(1) } } }(t, e) }
