/**************************************

脚本名称：微信小程序 沪上阿姨 签到
脚本作者：@Sliverkiss
更新日期：2023.08.28 16:40:11

2023/08/28 20:10:11 修改青龙无法运行的问题，圈x请自行测试

脚本兼容：Surge、QuantumultX、Loon、Shadowrocket、Node.js
只测试过loon和青龙，其它环境请自行尝试

*************************
【 签到脚本使用教程 】:
*************************

青龙：
1.登录后抓包 webapi.qmai.cn域名下的Qm-User-Token，填写到hsay_data,多账号用 @ 分割
2.可选推送：将bark的key填写到bark_key，不填默认使用青龙自带的推送

Loon: 
1.将获取Cookie脚本保存到本地
2.打开小程序->我的，若提示获取Cookie成功则可以使用该脚本
3.关闭获取ck脚本，避免产生不必要的mitm。

[Script]
cron "30 9 * * *" script-path=https://raw.githubusercontent.com/Sliverkiss/GoodNight/master/Script/hsay.js, timeout=300, tag=沪上阿姨
http-request ^https:\/\/webapi.qmai.cn\/web\/catering\/crm\/points-info script-path=https://raw.githubusercontent.com/Sliverkiss/GoodNight/master/Script/hsay.js, timeout=10, tag=沪上阿姨获取token
[MITM]
hostname =webapi.qmai.cn


------------------------------------------
1、此脚本仅用于学习研究，不保证其合法性、准确性、有效性，请根据情况自行判断，本人对此不承担任何保证责任。
2、由于此脚本仅用于学习研究，您必须在下载后 24 小时内将所有内容从您的计算机或手机或任何存储设备中完全删除，若违反规定引起任何事件本人对此均不负责。
3、请勿将此脚本用于任何商业或非法目的，若违反规定请自行对此负责。
4、此脚本涉及应用与本人无关，本人对因此引起的任何隐私泄漏或其他后果不承担任何责任。
5、本人对任何脚本引发的问题概不负责，包括但不限于由脚本错误引起的任何损失和损害。
6、如果任何单位或个人认为此脚本可能涉嫌侵犯其权利，应及时通知并提供身份证明，所有权证明，我们将在收到认证文件确认后删除此脚本。
7、所有直接或间接使用、查看此脚本的人均应该仔细阅读此声明。本人保留随时更改或补充此声明的权利。一旦您使用或复制了此脚本，即视为您已接受此免责声明。


******************************************/


// env.js 全局
const _0x5c0a6c=_0x470a;function _0x4f46(){const _0xc7b8d3=['body','✅check\x20success!','wechat','all','keys','https://raw.githubusercontent.com/Sliverkiss/GoodNight/main/tip.json','❌账号','\x20>>\x20Start\x20check\x20CK','./sendNotify','100ahoEmU','5971617OLiToi','getRandomTime','undefined','join','\x20>>\x20Check\x20ck\x20error!','5336oMWDcp','push','获取签到Cookie成功🎉','getdata','method','🔷账号','https://raw.githubusercontent.com/Sliverkiss/GoodNight/main/notice.json','check','split','https://webapi.qmai.cn/web/catering/integral/sign/signIn','notifyMsg','✅查询成功:','data','headers','1426368SPqSuE','setdata','hsay_data','22966asgSFF','qm-user-token','https://webapi.qmai.cn/web/catering/crm/points-info','210xStyQs','❌未检测到ck，请添加环境变量','1471921XvSlZQ','finally','barkKey','msg','\x0a=============\x20用户CK有效性验证\x20=============\x0a','7vBoAGu','point','log','length','{\x22activityId\x22:\x22702822503017398273\x22,\x22mobilePhone\x22:\x22root\x22,\x22userName\x22:\x22微信用户\x22,\x22appid\x22:\x22wxd92a2d29f8022f40\x22}','sendNotify','150lhlPGA','done','共找到','name','✅签到成功！','index','883368IXXwRA','signin','ckStatus','code','notice','691199YPFNuJ','message','env','random','沪上阿姨','\x20>>\x20check\x20ck\x20error!','wait','map','isNode','token','错误获取签到Cookie失败','round','bark_key','catch','request','未找到CK'];_0x4f46=function(){return _0xc7b8d3;};return _0x4f46();}(function(_0x2a8588,_0x18f36c){const _0x57b788=_0x470a,_0x421a01=_0x2a8588();while(!![]){try{const _0x3e639b=-parseInt(_0x57b788(0x98))/0x1+parseInt(_0x57b788(0xc8))/0x2*(parseInt(_0x57b788(0xd8))/0x3)+-parseInt(_0x57b788(0xb7))/0x4*(parseInt(_0x57b788(0xcb))/0x5)+-parseInt(_0x57b788(0xc5))/0x6*(parseInt(_0x57b788(0xd2))/0x7)+parseInt(_0x57b788(0x93))/0x8+-parseInt(_0x57b788(0xb2))/0x9+-parseInt(_0x57b788(0xb1))/0xa*(-parseInt(_0x57b788(0xcd))/0xb);if(_0x3e639b===_0x18f36c)break;else _0x421a01['push'](_0x421a01['shift']());}catch(_0x581c89){_0x421a01['push'](_0x421a01['shift']());}}}(_0x4f46,0x5b5c5));const $=new Env(_0x5c0a6c(0x9c)),ckName=_0x5c0a6c(0xc7),Notify=0x1,notify=$[_0x5c0a6c(0xa0)]()?require(_0x5c0a6c(0xb0)):'';let envSplitor=['@'],userCookie=($[_0x5c0a6c(0xa0)]()?process[_0x5c0a6c(0x9a)][ckName]:$[_0x5c0a6c(0xba)](ckName))||'',userList=[],userIdx=0x0,userCount=0x0;$['notifyMsg']=[],$['barkKey']=($[_0x5c0a6c(0xa0)]()?process['env']['bark_key']:$[_0x5c0a6c(0xba)](_0x5c0a6c(0xa4)))||'';async function main(){const _0xb11379=_0x5c0a6c;await getNotice(),console[_0xb11379(0xd4)](_0xb11379(0xd1));let _0x5b5223=[];for(let _0x39e38d of userList){console[_0xb11379(0xd4)]('🔷账号'+_0x39e38d[_0xb11379(0x92)]+_0xb11379(0xaf)),_0x5b5223[_0xb11379(0xb8)](await _0x39e38d[_0xb11379(0xbe)]()),await $['wait'](_0x39e38d['getRandomTime']());}await Promise[_0xb11379(0xab)](_0x5b5223),console[_0xb11379(0xd4)]('\x0a==================\x20任务\x20==================\x0a'),_0x5b5223=[];for(let _0x3054b1 of userList){_0x3054b1['ckStatus']?(DoubleLog(_0xb11379(0xbc)+_0x3054b1['index']+'\x20>>\x20Start\x20work'),console['log']('随机延迟'+_0x3054b1['getRandomTime']()+'ms'),_0x5b5223[_0xb11379(0xb8)](await _0x3054b1[_0xb11379(0x94)]()),await $[_0xb11379(0x9e)](_0x3054b1[_0xb11379(0xb3)]()),_0x5b5223[_0xb11379(0xb8)](await _0x3054b1['point']()),await $[_0xb11379(0x9e)](_0x3054b1[_0xb11379(0xb3)]())):$[_0xb11379(0xc1)][_0xb11379(0xb8)](_0xb11379(0xae)+_0x3054b1[_0xb11379(0x92)]+_0xb11379(0xb6));}await Promise['all'](_0x5b5223);}class UserInfo{constructor(_0x57f948){const _0x2fbb27=_0x5c0a6c;this[_0x2fbb27(0x92)]=++userIdx,this[_0x2fbb27(0xa1)]=_0x57f948,this[_0x2fbb27(0xa8)]=_0x2fbb27(0xd6),this[_0x2fbb27(0x95)]=!![],this[_0x2fbb27(0xc4)]={'Qm-User-Token':this[_0x2fbb27(0xa1)],'Qm-From':_0x2fbb27(0xaa),'content-type':'application/json'};}[_0x5c0a6c(0xb3)](){return randomInt(0x3e8,0xbb8);}async['signin'](){const _0x2b632f=_0x5c0a6c;try{const _0x354c12={'url':_0x2b632f(0xc0),'headers':this[_0x2b632f(0xc4)],'body':this[_0x2b632f(0xa8)]};let _0x5f302b=await httpRequest(_0x354c12);_0x5f302b?.[_0x2b632f(0x96)]==0x0?DoubleLog(_0x2b632f(0x91)):(DoubleLog('🔶'+_0x5f302b?.[_0x2b632f(0x99)]),console[_0x2b632f(0xd4)](_0x5f302b));}catch(_0x5d2f95){console[_0x2b632f(0xd4)](_0x5d2f95);}}async[_0x5c0a6c(0xd3)](){const _0x81a75=_0x5c0a6c;let _0x31df33={'url':'https://webapi.qmai.cn/web/catering/crm/points-info','headers':this[_0x81a75(0xc4)],'body':'{}'},_0x4f7579=await httpRequest(_0x31df33);_0x4f7579?.['code']==0x0?DoubleLog(_0x81a75(0xc2)+_0x4f7579?.[_0x81a75(0xc3)]?.['totalPoints']+'积分'):$[_0x81a75(0xd4)]('🔶'+_0x4f7579);}async[_0x5c0a6c(0xbe)](){const _0xaa0961=_0x5c0a6c;let _0x343104={'url':_0xaa0961(0xca),'headers':this[_0xaa0961(0xc4)],'body':'{}'},_0x42335d=await httpRequest(_0x343104);_0x42335d?.['code']=='10008'?(this[_0xaa0961(0x95)]=![],console['log'](_0xaa0961(0xae)+this['index']+_0xaa0961(0x9d))):console['log'](_0xaa0961(0xa9));}}function _0x470a(_0x593056,_0xbbf1de){const _0x4f467b=_0x4f46();return _0x470a=function(_0x470a79,_0x213ebc){_0x470a79=_0x470a79-0x91;let _0xc052b0=_0x4f467b[_0x470a79];return _0xc052b0;},_0x470a(_0x593056,_0xbbf1de);}async function getCookie(){const _0x1b72ab=_0x5c0a6c;if($request&&$request[_0x1b72ab(0xbb)]!='OPTIONS'){const _0x2d38cf=$request[_0x1b72ab(0xc4)]['Qm-User-Token']||$[_0x1b72ab(0xa6)][_0x1b72ab(0xc4)][_0x1b72ab(0xc9)]||$[_0x1b72ab(0xa6)]['headers']['QM-USER-TOKEN'];_0x2d38cf?($[_0x1b72ab(0xc6)](_0x2d38cf,ckName),$['msg']($[_0x1b72ab(0xdb)],'',_0x1b72ab(0xb9))):$[_0x1b72ab(0xd0)]($[_0x1b72ab(0xdb)],'',_0x1b72ab(0xa2));}}async function getNotice(){const _0x1d7d76=_0x5c0a6c;try{const _0x1bc46c=[_0x1d7d76(0xbd),_0x1d7d76(0xad)];for(const _0x1b6576 of _0x1bc46c){const _0x3a9295={'url':_0x1b6576,'headers':{'User-Agent':''}},_0xebd5b=await httpRequest(_0x3a9295);if(_0xebd5b)console[_0x1d7d76(0xd4)](_0xebd5b[_0x1d7d76(0x97)]);}}catch(_0xcf3485){console[_0x1d7d76(0xd4)](_0xcf3485);}}!(async()=>{const _0x53e6cc=_0x5c0a6c;if(typeof $request!=_0x53e6cc(0xb4)){await getCookie();return;}if(!await checkEnv())throw new Error(_0x53e6cc(0xcc));;userList[_0x53e6cc(0xd5)]>0x0&&await main();})()[_0x5c0a6c(0xa5)](_0x279fb=>$[_0x5c0a6c(0xc1)][_0x5c0a6c(0xb8)](_0x279fb['message']||_0x279fb))[_0x5c0a6c(0xce)](async()=>{const _0x51738e=_0x5c0a6c;$[_0x51738e(0xcf)]&&await BarkNotify($,$['barkKey'],$[_0x51738e(0xdb)],$[_0x51738e(0xc1)][_0x51738e(0xb5)]('\x0a'));;await SendMsg($[_0x51738e(0xc1)][_0x51738e(0xb5)]('\x0a')),$[_0x51738e(0xd9)]();});function DoubleLog(_0x351f11){const _0x4bb8c2=_0x5c0a6c;$[_0x4bb8c2(0xa0)]()?_0x351f11&&(console[_0x4bb8c2(0xd4)](''+_0x351f11),$[_0x4bb8c2(0xc1)]['push'](''+_0x351f11)):(console['log'](''+_0x351f11),$['notifyMsg'][_0x4bb8c2(0xb8)](''+_0x351f11));}function toParams(_0x2e479f){const _0xc4fdab=_0x5c0a6c;var _0x42fc80=Object[_0xc4fdab(0xac)](_0x2e479f)[_0xc4fdab(0x9f)](function(_0x54297f){return encodeURIComponent(_0x54297f)+'='+encodeURIComponent(_0x2e479f[_0x54297f]);})['join']('&');return _0x42fc80;}async function checkEnv(){const _0x222003=_0x5c0a6c;if(userCookie){let _0x20a718=envSplitor[0x0];for(let _0x2c6bab of envSplitor)if(userCookie['indexOf'](_0x2c6bab)>-0x1){_0x20a718=_0x2c6bab;break;}for(let _0xdfeb60 of userCookie[_0x222003(0xbf)](_0x20a718))_0xdfeb60&&userList['push'](new UserInfo(_0xdfeb60));userCount=userList[_0x222003(0xd5)];}else{console[_0x222003(0xd4)](_0x222003(0xa7));return;}return console[_0x222003(0xd4)](_0x222003(0xda)+userCount+'个账号'),!![];}function randomInt(_0x5a27b5,_0x35c06e){const _0x134e86=_0x5c0a6c;return Math[_0x134e86(0xa3)](Math[_0x134e86(0x9b)]()*(_0x35c06e-_0x5a27b5)+_0x5a27b5);}async function SendMsg(_0xa6975b){const _0x10fb0b=_0x5c0a6c;if(!_0xa6975b)return;Notify>0x0?$[_0x10fb0b(0xa0)]()?await notify[_0x10fb0b(0xd7)]($[_0x10fb0b(0xdb)],_0xa6975b):$[_0x10fb0b(0xd0)]($[_0x10fb0b(0xdb)],'',_0xa6975b):console[_0x10fb0b(0xd4)](_0xa6975b);}
/** ---------------------------------固定不动区域----------------------------------------- */
// prettier-ignore

//请求函数函数二次封装
function httpRequest(options, method) { typeof (method) === 'undefined' ? ('body' in options ? method = 'post' : method = 'get') : method = method; return new Promise((resolve) => { $[method](options, (err, resp, data) => { try { if (err) { console.log(`${method}请求失败`); $.logErr(err) } else { if (data) { typeof JSON.parse(data) == 'object' ? data = JSON.parse(data) : data = data; resolve(data) } else { console.log(`请求api返回数据为空，请检查自身原因`) } } } catch (e) { $.logErr(e, resp) } finally { resolve() } }) }) }
//Bark APP notify
async function BarkNotify(c, k, t, b) { for (let i = 0; i < 3; i++) { console.log(`🔷Bark notify >> Start push (${i + 1})`); const s = await new Promise((n) => { c.post({ url: 'https://api.day.app/push', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ title: t, body: b, device_key: k, ext_params: { group: t } }) }, (e, r, d) => r && r.status == 200 ? n(1) : n(d || e)) }); if (s === 1) { console.log('✅Push success!'); break } else { console.log(`❌Push failed! >> ${s.message || s}`) } } };
//From chavyleung's Env.js
function Env(t, e) { class s { constructor(t) { this.env = t } send(t, e = "GET") { t = "string" == typeof t ? { url: t } : t; let s = this.get; return "POST" === e && (s = this.post), new Promise((e, a) => { s.call(this, t, (t, s, r) => { t ? a(t) : e(s) }) }) } get(t) { return this.send.call(this.env, t) } post(t) { return this.send.call(this.env, t, "POST") } } return new class { constructor(t, e) { this.name = t, this.http = new s(this), this.data = null, this.dataFile = "box.dat", this.logs = [], this.isMute = !1, this.isNeedRewrite = !1, this.logSeparator = "\n", this.encoding = "utf-8", this.startTime = (new Date).getTime(), Object.assign(this, e), this.log("", `🔔${this.name}, 开始!`) } getEnv() { return "undefined" != typeof $environment && $environment["surge-version"] ? "Surge" : "undefined" != typeof $environment && $environment["stash-version"] ? "Stash" : "undefined" != typeof module && module.exports ? "Node.js" : "undefined" != typeof $task ? "Quantumult X" : "undefined" != typeof $loon ? "Loon" : "undefined" != typeof $rocket ? "Shadowrocket" : void 0 } isNode() { return "Node.js" === this.getEnv() } isQuanX() { return "Quantumult X" === this.getEnv() } isSurge() { return "Surge" === this.getEnv() } isLoon() { return "Loon" === this.getEnv() } isShadowrocket() { return "Shadowrocket" === this.getEnv() } isStash() { return "Stash" === this.getEnv() } toObj(t, e = null) { try { return JSON.parse(t) } catch { return e } } toStr(t, e = null) { try { return JSON.stringify(t) } catch { return e } } getjson(t, e) { let s = e; const a = this.getdata(t); if (a) try { s = JSON.parse(this.getdata(t)) } catch { } return s } setjson(t, e) { try { return this.setdata(JSON.stringify(t), e) } catch { return !1 } } getScript(t) { return new Promise(e => { this.get({ url: t }, (t, s, a) => e(a)) }) } runScript(t, e) { return new Promise(s => { let a = this.getdata("@chavy_boxjs_userCfgs.httpapi"); a = a ? a.replace(/\n/g, "").trim() : a; let r = this.getdata("@chavy_boxjs_userCfgs.httpapi_timeout"); r = r ? 1 * r : 20, r = e && e.timeout ? e.timeout : r; const [i, o] = a.split("@"), n = { url: `http://${o}/v1/scripting/evaluate`, body: { script_text: t, mock_type: "cron", timeout: r }, headers: { "X-Key": i, Accept: "*/*" }, timeout: r }; this.post(n, (t, e, a) => s(a)) }).catch(t => this.logErr(t)) } loaddata() { if (!this.isNode()) return {}; { this.fs = this.fs ? this.fs : require("fs"), this.path = this.path ? this.path : require("path"); const t = this.path.resolve(this.dataFile), e = this.path.resolve(process.cwd(), this.dataFile), s = this.fs.existsSync(t), a = !s && this.fs.existsSync(e); if (!s && !a) return {}; { const a = s ? t : e; try { return JSON.parse(this.fs.readFileSync(a)) } catch (t) { return {} } } } } writedata() { if (this.isNode()) { this.fs = this.fs ? this.fs : require("fs"), this.path = this.path ? this.path : require("path"); const t = this.path.resolve(this.dataFile), e = this.path.resolve(process.cwd(), this.dataFile), s = this.fs.existsSync(t), a = !s && this.fs.existsSync(e), r = JSON.stringify(this.data); s ? this.fs.writeFileSync(t, r) : a ? this.fs.writeFileSync(e, r) : this.fs.writeFileSync(t, r) } } lodash_get(t, e, s) { const a = e.replace(/\[(\d+)\]/g, ".$1").split("."); let r = t; for (const t of a) if (r = Object(r)[t], void 0 === r) return s; return r } lodash_set(t, e, s) { return Object(t) !== t ? t : (Array.isArray(e) || (e = e.toString().match(/[^.[\]]+/g) || []), e.slice(0, -1).reduce((t, s, a) => Object(t[s]) === t[s] ? t[s] : t[s] = Math.abs(e[a + 1]) >> 0 == +e[a + 1] ? [] : {}, t)[e[e.length - 1]] = s, t) } getdata(t) { let e = this.getval(t); if (/^@/.test(t)) { const [, s, a] = /^@(.*?)\.(.*?)$/.exec(t), r = s ? this.getval(s) : ""; if (r) try { const t = JSON.parse(r); e = t ? this.lodash_get(t, a, "") : e } catch (t) { e = "" } } return e } setdata(t, e) { let s = !1; if (/^@/.test(e)) { const [, a, r] = /^@(.*?)\.(.*?)$/.exec(e), i = this.getval(a), o = a ? "null" === i ? null : i || "{}" : "{}"; try { const e = JSON.parse(o); this.lodash_set(e, r, t), s = this.setval(JSON.stringify(e), a) } catch (e) { const i = {}; this.lodash_set(i, r, t), s = this.setval(JSON.stringify(i), a) } } else s = this.setval(t, e); return s } getval(t) { switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": return $persistentStore.read(t); case "Quantumult X": return $prefs.valueForKey(t); case "Node.js": return this.data = this.loaddata(), this.data[t]; default: return this.data && this.data[t] || null } } setval(t, e) { switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": return $persistentStore.write(t, e); case "Quantumult X": return $prefs.setValueForKey(t, e); case "Node.js": return this.data = this.loaddata(), this.data[e] = t, this.writedata(), !0; default: return this.data && this.data[e] || null } } initGotEnv(t) { this.got = this.got ? this.got : require("got"), this.cktough = this.cktough ? this.cktough : require("tough-cookie"), this.ckjar = this.ckjar ? this.ckjar : new this.cktough.CookieJar, t && (t.headers = t.headers ? t.headers : {}, void 0 === t.headers.Cookie && void 0 === t.cookieJar && (t.cookieJar = this.ckjar)) } get(t, e = (() => { })) { switch (t.headers && (delete t.headers["Content-Type"], delete t.headers["Content-Length"], delete t.headers["content-type"], delete t.headers["content-length"]), t.params && (t.url += "?" + this.queryStr(t.params)), this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": default: this.isSurge() && this.isNeedRewrite && (t.headers = t.headers || {}, Object.assign(t.headers, { "X-Surge-Skip-Scripting": !1 })), $httpClient.get(t, (t, s, a) => { !t && s && (s.body = a, s.statusCode = s.status ? s.status : s.statusCode, s.status = s.statusCode), e(t, s, a) }); break; case "Quantumult X": this.isNeedRewrite && (t.opts = t.opts || {}, Object.assign(t.opts, { hints: !1 })), $task.fetch(t).then(t => { const { statusCode: s, statusCode: a, headers: r, body: i, bodyBytes: o } = t; e(null, { status: s, statusCode: a, headers: r, body: i, bodyBytes: o }, i, o) }, t => e(t && t.error || "UndefinedError")); break; case "Node.js": let s = require("iconv-lite"); this.initGotEnv(t), this.got(t).on("redirect", (t, e) => { try { if (t.headers["set-cookie"]) { const s = t.headers["set-cookie"].map(this.cktough.Cookie.parse).toString(); s && this.ckjar.setCookieSync(s, null), e.cookieJar = this.ckjar } } catch (t) { this.logErr(t) } }).then(t => { const { statusCode: a, statusCode: r, headers: i, rawBody: o } = t, n = s.decode(o, this.encoding); e(null, { status: a, statusCode: r, headers: i, rawBody: o, body: n }, n) }, t => { const { message: a, response: r } = t; e(a, r, r && s.decode(r.rawBody, this.encoding)) }) } } post(t, e = (() => { })) { const s = t.method ? t.method.toLocaleLowerCase() : "post"; switch (t.body && t.headers && !t.headers["Content-Type"] && !t.headers["content-type"] && (t.headers["content-type"] = "application/x-www-form-urlencoded"), t.headers && (delete t.headers["Content-Length"], delete t.headers["content-length"]), this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": default: this.isSurge() && this.isNeedRewrite && (t.headers = t.headers || {}, Object.assign(t.headers, { "X-Surge-Skip-Scripting": !1 })), $httpClient[s](t, (t, s, a) => { !t && s && (s.body = a, s.statusCode = s.status ? s.status : s.statusCode, s.status = s.statusCode), e(t, s, a) }); break; case "Quantumult X": t.method = s, this.isNeedRewrite && (t.opts = t.opts || {}, Object.assign(t.opts, { hints: !1 })), $task.fetch(t).then(t => { const { statusCode: s, statusCode: a, headers: r, body: i, bodyBytes: o } = t; e(null, { status: s, statusCode: a, headers: r, body: i, bodyBytes: o }, i, o) }, t => e(t && t.error || "UndefinedError")); break; case "Node.js": let a = require("iconv-lite"); this.initGotEnv(t); const { url: r, ...i } = t; this.got[s](r, i).then(t => { const { statusCode: s, statusCode: r, headers: i, rawBody: o } = t, n = a.decode(o, this.encoding); e(null, { status: s, statusCode: r, headers: i, rawBody: o, body: n }, n) }, t => { const { message: s, response: r } = t; e(s, r, r && a.decode(r.rawBody, this.encoding)) }) } } time(t, e = null) { const s = e ? new Date(e) : new Date; let a = { "M+": s.getMonth() + 1, "d+": s.getDate(), "H+": s.getHours(), "m+": s.getMinutes(), "s+": s.getSeconds(), "q+": Math.floor((s.getMonth() + 3) / 3), S: s.getMilliseconds() }; /(y+)/.test(t) && (t = t.replace(RegExp.$1, (s.getFullYear() + "").substr(4 - RegExp.$1.length))); for (let e in a) new RegExp("(" + e + ")").test(t) && (t = t.replace(RegExp.$1, 1 == RegExp.$1.length ? a[e] : ("00" + a[e]).substr(("" + a[e]).length))); return t } queryStr(t) { let e = ""; for (const s in t) { let a = t[s]; null != a && "" !== a && ("object" == typeof a && (a = JSON.stringify(a)), e += `${s}=${a}&`) } return e = e.substring(0, e.length - 1), e } msg(e = t, s = "", a = "", r) { const i = t => { switch (typeof t) { case void 0: return t; case "string": switch (this.getEnv()) { case "Surge": case "Stash": default: return { url: t }; case "Loon": case "Shadowrocket": return t; case "Quantumult X": return { "open-url": t }; case "Node.js": return }case "object": switch (this.getEnv()) { case "Surge": case "Stash": case "Shadowrocket": default: { let e = t.url || t.openUrl || t["open-url"]; return { url: e } } case "Loon": { let e = t.openUrl || t.url || t["open-url"], s = t.mediaUrl || t["media-url"]; return { openUrl: e, mediaUrl: s } } case "Quantumult X": { let e = t["open-url"] || t.url || t.openUrl, s = t["media-url"] || t.mediaUrl, a = t["update-pasteboard"] || t.updatePasteboard; return { "open-url": e, "media-url": s, "update-pasteboard": a } } case "Node.js": return }default: return } }; if (!this.isMute) switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": default: $notification.post(e, s, a, i(r)); break; case "Quantumult X": $notify(e, s, a, i(r)); break; case "Node.js": }if (!this.isMuteLog) { let t = ["", "==============📣系统通知📣=============="]; t.push(e), s && t.push(s), a && t.push(a), console.log(t.join("\n")), this.logs = this.logs.concat(t) } } log(...t) { t.length > 0 && (this.logs = [...this.logs, ...t]), console.log(t.join(this.logSeparator)) } logErr(t, e) { switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": case "Quantumult X": default: this.log("", `❗️${this.name}, 错误!`, t); break; case "Node.js": this.log("", `❗️${this.name}, 错误!`, t.stack) } } wait(t) { return new Promise(e => setTimeout(e, t)) } done(t = {}) { const e = (new Date).getTime(), s = (e - this.startTime) / 1e3; switch (this.log("", `🔔${this.name}, 结束! 🕛 ${s} 秒`), this.log(), this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": case "Quantumult X": default: $done(t); break; case "Node.js": process.exit(1) } } }(t, e) }
