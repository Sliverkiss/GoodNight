/**************************************

脚本名称：微信小程序 雀巢会员俱乐部 签到
脚本作者：@Sliverkiss
更新日期：2023.08.31 17:40:11

脚本兼容：Surge、QuantumultX、Loon、Shadowrocket、Node.js
只测试过loon和青龙，其它环境请自行尝试

*************************
【 签到脚本使用教程 】:
*************************

青龙：
1.登录后抓包 crm.nestlechinese.com域名下的Authorization，填写到qc_data,多账号用 @ 分割
2.可选推送：将bark的key填写到bark_key，不填默认使用青龙自带的推送

Loon: 
1.将获取Cookie脚本保存到本地
2.打开小程序->我的，若提示获取Cookie成功则可以使用该脚本
3.关闭获取ck脚本，避免产生不必要的mitm。

[Script]
cron "30 0 * * *" script-path=https://raw.githubusercontent.com/Sliverkiss/GoodNight/master/Script/nestle.js, timeout=300, tag=雀巢会员俱乐部
http-request ^https:\/\/crm.nestlechinese.com\/openapi\/pointsservice\/api\/Points\/getuserbalance script-path=https://raw.githubusercontent.com/Sliverkiss/GoodNight/master/Script/nestle.js, timeout=10, tag=雀巢会员俱乐部获取token
[MITM]
hostname =crm.nestlechinese.com


------------------------------------------
1、此脚本仅用于学习研究，不保证其合法性、准确性、有效性，请根据情况自行判断，本人对此不承担任何保证责任。
2、由于此脚本仅用于学习研究，您必须在下载后 24 小时内将所有内容从您的计算机或手机或任何存储设备中完全删除，若违反规定引起任何事件本人对此均不负责。
3、请勿将此脚本用于任何商业或非法目的，若违反规定请自行对此负责。
4、此脚本涉及应用与本人无关，本人对因此引起的任何隐私泄漏或其他后果不承担任何责任。
5、本人对任何脚本引发的问题概不负责，包括但不限于由脚本错误引起的任何损失和损害。
6、如果任何单位或个人认为此脚本可能涉嫌侵犯其权利，应及时通知并提供身份证明，所有权证明，我们将在收到认证文件确认后删除此脚本。
7、所有直接或间接使用、查看此脚本的人均应该仔细阅读此声明。本人保留随时更改或补充此声明的权利。一旦您使用或复制了此脚本，即视为您已接受此免责声明。


******************************************/


// env.js 全局
const _0x258ee9=_0x332f;(function(_0x4d809b,_0x36edc6){const _0x3d64f6=_0x332f,_0x892677=_0x4d809b();while(!![]){try{const _0xf476f9=parseInt(_0x3d64f6(0x124))/0x1+parseInt(_0x3d64f6(0x10e))/0x2*(-parseInt(_0x3d64f6(0x11e))/0x3)+-parseInt(_0x3d64f6(0x105))/0x4*(parseInt(_0x3d64f6(0x13e))/0x5)+parseInt(_0x3d64f6(0x115))/0x6+parseInt(_0x3d64f6(0x136))/0x7+parseInt(_0x3d64f6(0x128))/0x8*(-parseInt(_0x3d64f6(0x130))/0x9)+parseInt(_0x3d64f6(0x137))/0xa;if(_0xf476f9===_0x36edc6)break;else _0x892677['push'](_0x892677['shift']());}catch(_0x562265){_0x892677['push'](_0x892677['shift']());}}}(_0x4bb8,0x30319));const $=new Env(_0x258ee9(0x11d)),ckName='qc_data',Notify=0x1,notify=$[_0x258ee9(0x112)]()?require(_0x258ee9(0x10a)):'';let envSplitor=['@'],userCookie=($[_0x258ee9(0x112)]()?process['env'][ckName]:$[_0x258ee9(0x118)](ckName))||'',userList=[],userIdx=0x0,userCount=0x0;$['notifyMsg']=[],$[_0x258ee9(0x140)]=($['isNode']()?process['env'][_0x258ee9(0x10d)]:$[_0x258ee9(0x118)](_0x258ee9(0x10d)))||'';async function main(){const _0x76a780=_0x258ee9;await getNotice(),console[_0x76a780(0x13a)](_0x76a780(0x11a));let _0x1feb66=[];for(let _0x2443ac of userList){console[_0x76a780(0x13a)](_0x76a780(0x113)+_0x2443ac[_0x76a780(0x134)]+_0x76a780(0x126)),_0x1feb66['push'](await _0x2443ac[_0x76a780(0x145)]()),await $[_0x76a780(0x101)](_0x2443ac['getRandomTime']());}await Promise['all'](_0x1feb66),console[_0x76a780(0x13a)]('\x0a==================\x20任务\x20==================\x0a'),_0x1feb66=[];for(let _0x3b7e17 of userList){_0x3b7e17['ckStatus']?(DoubleLog('🔷账号'+_0x3b7e17[_0x76a780(0x134)]+_0x76a780(0x138)),console[_0x76a780(0x13a)](_0x76a780(0x147)+_0x3b7e17[_0x76a780(0x12c)]()+'ms'),_0x1feb66[_0x76a780(0x131)](await _0x3b7e17[_0x76a780(0x13d)]()),await $['wait'](_0x3b7e17[_0x76a780(0x12c)]()),_0x1feb66[_0x76a780(0x131)](await _0x3b7e17[_0x76a780(0x143)]()),await $[_0x76a780(0x101)](_0x3b7e17[_0x76a780(0x12c)]())):$['notifyMsg'][_0x76a780(0x131)](_0x76a780(0x148)+_0x3b7e17[_0x76a780(0x134)]+_0x76a780(0x132));}await Promise[_0x76a780(0x144)](_0x1feb66);}class UserInfo{constructor(_0xa47a23){const _0x59c1ca=_0x258ee9;this[_0x59c1ca(0x134)]=++userIdx,this[_0x59c1ca(0x12f)]=_0xa47a23,this[_0x59c1ca(0x14a)]=!![],this[_0x59c1ca(0x120)]={'Authorization':this['token'],'Content-Type':_0x59c1ca(0x119)};}[_0x258ee9(0x12c)](){return randomInt(0x3e8,0xbb8);}async[_0x258ee9(0x13d)](){const _0x577760=_0x258ee9;try{const _0x5cb9d8={'url':_0x577760(0x111),'headers':{'Authorization':this[_0x577760(0x12f)],'Content-Type':_0x577760(0x119)},'body':_0x577760(0x149)};let _0x5afaaa=await httpRequest(_0x5cb9d8);if(_0x5afaaa?.[_0x577760(0x146)]==0xc8)DoubleLog(_0x577760(0x109));else _0x5afaaa?.[_0x577760(0x146)]==0xc9?DoubleLog(_0x577760(0x135)):DoubleLog('🔶'+_0x5afaaa?.[_0x577760(0x103)]);}catch(_0x5c084f){console[_0x577760(0x13a)](_0x5c084f);}}async[_0x258ee9(0x143)](){const _0x328c76=_0x258ee9;let _0x363137={'url':_0x328c76(0x106),'headers':this[_0x328c76(0x120)],'body':_0x328c76(0x133)},_0x5eb063=await httpRequest(_0x363137);_0x5eb063?.[_0x328c76(0x146)]==0xc8?DoubleLog(_0x328c76(0x13f)+_0x5eb063?.[_0x328c76(0x104)]+_0x328c76(0x108)):console[_0x328c76(0x13a)](_0x5eb063);}async[_0x258ee9(0x145)](){const _0x3f89eb=_0x258ee9;let _0x255f54={'url':_0x3f89eb(0x106),'headers':this[_0x3f89eb(0x120)],'body':'{}'},_0x190755=await httpRequest(_0x255f54);_0x190755?.[_0x3f89eb(0x146)]==_0x3f89eb(0x125)?console['log']('✅check\x20success!'):(this['ckStatus']=![],console[_0x3f89eb(0x13a)](_0x3f89eb(0x148)+this['index']+'\x20>>\x20check\x20ck\x20error!'));}}async function getCookie(){const _0x4e8fac=_0x258ee9;if($request&&$request['method']!=_0x4e8fac(0x142)){const _0x2144e0=$request['headers'][_0x4e8fac(0x110)]||$['request'][_0x4e8fac(0x120)][_0x4e8fac(0x121)];_0x2144e0?($['setdata'](_0x2144e0,ckName),$['msg']($[_0x4e8fac(0x11c)],'',_0x4e8fac(0x141))):$['msg']($[_0x4e8fac(0x11c)],'',_0x4e8fac(0x12e));}}async function getNotice(){const _0x441a8d=_0x258ee9;try{const _0x54e288=[_0x441a8d(0x102),_0x441a8d(0x117)];for(const _0x5432a6 of _0x54e288){const _0x68384c={'url':_0x5432a6,'headers':{'User-Agent':''}},_0x2022c8=await httpRequest(_0x68384c);if(_0x2022c8)console['log'](_0x2022c8[_0x441a8d(0x139)]);}}catch(_0x321cac){console[_0x441a8d(0x13a)](_0x321cac);}}!(async()=>{const _0x4e3b1e=_0x258ee9;if(typeof $request!=_0x4e3b1e(0x10b)){await getCookie();return;}if(!await checkEnv())throw new Error(_0x4e3b1e(0x13b));;userList[_0x4e3b1e(0x107)]>0x0&&await main();})()[_0x258ee9(0x11b)](_0x367c0b=>$[_0x258ee9(0x123)][_0x258ee9(0x131)](_0x367c0b[_0x258ee9(0x10c)]||_0x367c0b))['finally'](async()=>{const _0x10171f=_0x258ee9;$[_0x10171f(0x140)]&&await BarkNotify($,$[_0x10171f(0x140)],$[_0x10171f(0x11c)],$[_0x10171f(0x123)][_0x10171f(0x13c)]('\x0a'));;await SendMsg($['notifyMsg'][_0x10171f(0x13c)]('\x0a')),$[_0x10171f(0x116)]();});function DoubleLog(_0x4de546){const _0x58acd4=_0x258ee9;$['isNode']()?_0x4de546&&(console[_0x58acd4(0x13a)](''+_0x4de546),$[_0x58acd4(0x123)][_0x58acd4(0x131)](''+_0x4de546)):(console[_0x58acd4(0x13a)](''+_0x4de546),$['notifyMsg'][_0x58acd4(0x131)](''+_0x4de546));}function toParams(_0x5c72b5){const _0x10ef1a=_0x258ee9;var _0x5f3d79=Object[_0x10ef1a(0x114)](_0x5c72b5)[_0x10ef1a(0x127)](function(_0x3e57cb){return encodeURIComponent(_0x3e57cb)+'='+encodeURIComponent(_0x5c72b5[_0x3e57cb]);})[_0x10ef1a(0x13c)]('&');return _0x5f3d79;}async function checkEnv(){const _0x2db548=_0x258ee9;if(userCookie){let _0x48c0af=envSplitor[0x0];for(let _0x3068f2 of envSplitor)if(userCookie[_0x2db548(0x12a)](_0x3068f2)>-0x1){_0x48c0af=_0x3068f2;break;}for(let _0x491b68 of userCookie[_0x2db548(0x122)](_0x48c0af))_0x491b68&&userList[_0x2db548(0x131)](new UserInfo(_0x491b68));userCount=userList[_0x2db548(0x107)];}else{console[_0x2db548(0x13a)](_0x2db548(0x12d));return;}return console['log'](_0x2db548(0x14b)+userCount+_0x2db548(0x10f)),!![];}function randomInt(_0x35632e,_0x3efa18){const _0x3e27bb=_0x258ee9;return Math[_0x3e27bb(0x12b)](Math['random']()*(_0x3efa18-_0x35632e)+_0x35632e);}function _0x332f(_0x41c19b,_0x7c692e){const _0x4bb8e0=_0x4bb8();return _0x332f=function(_0x332f20,_0x162e7b){_0x332f20=_0x332f20-0x101;let _0xc9f823=_0x4bb8e0[_0x332f20];return _0xc9f823;},_0x332f(_0x41c19b,_0x7c692e);}function _0x4bb8(){const _0x227022=['all','check','errcode','随机延迟','❌账号','{\x22task_id\x22:17}','ckStatus','共找到','wait','https://raw.githubusercontent.com/Sliverkiss/GoodNight/main/notice.json','errmsg','data','42392zOiTaj','https://crm.nestlechinese.com/openapi/pointsservice/api/Points/getuserbalance','length','雀巢币','✅打卡成功！获得2雀巢币','./sendNotify','undefined','message','bark_key','960nQquYO','个账号','Authorization','https://crm.nestlechinese.com/openapi/activityservice/api/task/add','isNode','🔷账号','keys','1504164xZnhHP','done','https://raw.githubusercontent.com/Sliverkiss/GoodNight/main/tip.json','getdata','application/json','\x0a=============\x20用户CK有效性验证\x20=============\x0a','catch','name','雀巢会员俱乐部','789RwrLpE','sendNotify','headers','authorization','split','notifyMsg','56449xtCCAS','200','\x20>>\x20Start\x20check\x20CK','map','8fjBWfV','msg','indexOf','round','getRandomTime','未找到CK','错误获取签到Cookie失败','token','2279925HwXfLI','push','\x20>>\x20Check\x20ck\x20error!','{\x20}','index','🔶今日已打卡','2446493ERgBwP','2276660uyutsI','\x20>>\x20Start\x20work','notice','log','❌未检测到ck，请添加环境变量','join','signin','145Ocboxn','✅查询成功:','barkKey','获取签到Cookie成功🎉','OPTIONS','point'];_0x4bb8=function(){return _0x227022;};return _0x4bb8();}async function SendMsg(_0x5db193){const _0x1cf5e2=_0x258ee9;if(!_0x5db193)return;Notify>0x0?$[_0x1cf5e2(0x112)]()?await notify[_0x1cf5e2(0x11f)]($[_0x1cf5e2(0x11c)],_0x5db193):$[_0x1cf5e2(0x129)]($['name'],'',_0x5db193):console[_0x1cf5e2(0x13a)](_0x5db193);}

/** ---------------------------------固定不动区域----------------------------------------- */
// prettier-ignore

//请求函数函数二次封装
function httpRequest(options, method) { typeof (method) === 'undefined' ? ('body' in options ? method = 'post' : method = 'get') : method = method; return new Promise((resolve) => { $[method](options, (err, resp, data) => { try { if (err) { console.log(`${method}请求失败`); $.logErr(err) } else { if (data) { typeof JSON.parse(data) == 'object' ? data = JSON.parse(data) : data = data; resolve(data) } else { console.log(`请求api返回数据为空，请检查自身原因`) } } } catch (e) { $.logErr(e, resp) } finally { resolve() } }) }) }
//Bark APP notify
async function BarkNotify(c, k, t, b) { for (let i = 0; i < 3; i++) { console.log(`🔷Bark notify >> Start push (${i + 1})`); const s = await new Promise((n) => { c.post({ url: 'https://api.day.app/push', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ title: t, body: b, device_key: k, ext_params: { group: t } }) }, (e, r, d) => r && r.status == 200 ? n(1) : n(d || e)) }); if (s === 1) { console.log('✅Push success!'); break } else { console.log(`❌Push failed! >> ${s.message || s}`) } } };
//From chavyleung's Env.js
function Env(t, e) { class s { constructor(t) { this.env = t } send(t, e = "GET") { t = "string" == typeof t ? { url: t } : t; let s = this.get; return "POST" === e && (s = this.post), new Promise((e, a) => { s.call(this, t, (t, s, r) => { t ? a(t) : e(s) }) }) } get(t) { return this.send.call(this.env, t) } post(t) { return this.send.call(this.env, t, "POST") } } return new class { constructor(t, e) { this.name = t, this.http = new s(this), this.data = null, this.dataFile = "box.dat", this.logs = [], this.isMute = !1, this.isNeedRewrite = !1, this.logSeparator = "\n", this.encoding = "utf-8", this.startTime = (new Date).getTime(), Object.assign(this, e), this.log("", `🔔${this.name}, 开始!`) } getEnv() { return "undefined" != typeof $environment && $environment["surge-version"] ? "Surge" : "undefined" != typeof $environment && $environment["stash-version"] ? "Stash" : "undefined" != typeof module && module.exports ? "Node.js" : "undefined" != typeof $task ? "Quantumult X" : "undefined" != typeof $loon ? "Loon" : "undefined" != typeof $rocket ? "Shadowrocket" : void 0 } isNode() { return "Node.js" === this.getEnv() } isQuanX() { return "Quantumult X" === this.getEnv() } isSurge() { return "Surge" === this.getEnv() } isLoon() { return "Loon" === this.getEnv() } isShadowrocket() { return "Shadowrocket" === this.getEnv() } isStash() { return "Stash" === this.getEnv() } toObj(t, e = null) { try { return JSON.parse(t) } catch { return e } } toStr(t, e = null) { try { return JSON.stringify(t) } catch { return e } } getjson(t, e) { let s = e; const a = this.getdata(t); if (a) try { s = JSON.parse(this.getdata(t)) } catch { } return s } setjson(t, e) { try { return this.setdata(JSON.stringify(t), e) } catch { return !1 } } getScript(t) { return new Promise(e => { this.get({ url: t }, (t, s, a) => e(a)) }) } runScript(t, e) { return new Promise(s => { let a = this.getdata("@chavy_boxjs_userCfgs.httpapi"); a = a ? a.replace(/\n/g, "").trim() : a; let r = this.getdata("@chavy_boxjs_userCfgs.httpapi_timeout"); r = r ? 1 * r : 20, r = e && e.timeout ? e.timeout : r; const [i, o] = a.split("@"), n = { url: `http://${o}/v1/scripting/evaluate`, body: { script_text: t, mock_type: "cron", timeout: r }, headers: { "X-Key": i, Accept: "*/*" }, timeout: r }; this.post(n, (t, e, a) => s(a)) }).catch(t => this.logErr(t)) } loaddata() { if (!this.isNode()) return {}; { this.fs = this.fs ? this.fs : require("fs"), this.path = this.path ? this.path : require("path"); const t = this.path.resolve(this.dataFile), e = this.path.resolve(process.cwd(), this.dataFile), s = this.fs.existsSync(t), a = !s && this.fs.existsSync(e); if (!s && !a) return {}; { const a = s ? t : e; try { return JSON.parse(this.fs.readFileSync(a)) } catch (t) { return {} } } } } writedata() { if (this.isNode()) { this.fs = this.fs ? this.fs : require("fs"), this.path = this.path ? this.path : require("path"); const t = this.path.resolve(this.dataFile), e = this.path.resolve(process.cwd(), this.dataFile), s = this.fs.existsSync(t), a = !s && this.fs.existsSync(e), r = JSON.stringify(this.data); s ? this.fs.writeFileSync(t, r) : a ? this.fs.writeFileSync(e, r) : this.fs.writeFileSync(t, r) } } lodash_get(t, e, s) { const a = e.replace(/\[(\d+)\]/g, ".$1").split("."); let r = t; for (const t of a) if (r = Object(r)[t], void 0 === r) return s; return r } lodash_set(t, e, s) { return Object(t) !== t ? t : (Array.isArray(e) || (e = e.toString().match(/[^.[\]]+/g) || []), e.slice(0, -1).reduce((t, s, a) => Object(t[s]) === t[s] ? t[s] : t[s] = Math.abs(e[a + 1]) >> 0 == +e[a + 1] ? [] : {}, t)[e[e.length - 1]] = s, t) } getdata(t) { let e = this.getval(t); if (/^@/.test(t)) { const [, s, a] = /^@(.*?)\.(.*?)$/.exec(t), r = s ? this.getval(s) : ""; if (r) try { const t = JSON.parse(r); e = t ? this.lodash_get(t, a, "") : e } catch (t) { e = "" } } return e } setdata(t, e) { let s = !1; if (/^@/.test(e)) { const [, a, r] = /^@(.*?)\.(.*?)$/.exec(e), i = this.getval(a), o = a ? "null" === i ? null : i || "{}" : "{}"; try { const e = JSON.parse(o); this.lodash_set(e, r, t), s = this.setval(JSON.stringify(e), a) } catch (e) { const i = {}; this.lodash_set(i, r, t), s = this.setval(JSON.stringify(i), a) } } else s = this.setval(t, e); return s } getval(t) { switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": return $persistentStore.read(t); case "Quantumult X": return $prefs.valueForKey(t); case "Node.js": return this.data = this.loaddata(), this.data[t]; default: return this.data && this.data[t] || null } } setval(t, e) { switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": return $persistentStore.write(t, e); case "Quantumult X": return $prefs.setValueForKey(t, e); case "Node.js": return this.data = this.loaddata(), this.data[e] = t, this.writedata(), !0; default: return this.data && this.data[e] || null } } initGotEnv(t) { this.got = this.got ? this.got : require("got"), this.cktough = this.cktough ? this.cktough : require("tough-cookie"), this.ckjar = this.ckjar ? this.ckjar : new this.cktough.CookieJar, t && (t.headers = t.headers ? t.headers : {}, void 0 === t.headers.Cookie && void 0 === t.cookieJar && (t.cookieJar = this.ckjar)) } get(t, e = (() => { })) { switch (t.headers && (delete t.headers["Content-Type"], delete t.headers["Content-Length"], delete t.headers["content-type"], delete t.headers["content-length"]), t.params && (t.url += "?" + this.queryStr(t.params)), this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": default: this.isSurge() && this.isNeedRewrite && (t.headers = t.headers || {}, Object.assign(t.headers, { "X-Surge-Skip-Scripting": !1 })), $httpClient.get(t, (t, s, a) => { !t && s && (s.body = a, s.statusCode = s.status ? s.status : s.statusCode, s.status = s.statusCode), e(t, s, a) }); break; case "Quantumult X": this.isNeedRewrite && (t.opts = t.opts || {}, Object.assign(t.opts, { hints: !1 })), $task.fetch(t).then(t => { const { statusCode: s, statusCode: a, headers: r, body: i, bodyBytes: o } = t; e(null, { status: s, statusCode: a, headers: r, body: i, bodyBytes: o }, i, o) }, t => e(t && t.error || "UndefinedError")); break; case "Node.js": let s = require("iconv-lite"); this.initGotEnv(t), this.got(t).on("redirect", (t, e) => { try { if (t.headers["set-cookie"]) { const s = t.headers["set-cookie"].map(this.cktough.Cookie.parse).toString(); s && this.ckjar.setCookieSync(s, null), e.cookieJar = this.ckjar } } catch (t) { this.logErr(t) } }).then(t => { const { statusCode: a, statusCode: r, headers: i, rawBody: o } = t, n = s.decode(o, this.encoding); e(null, { status: a, statusCode: r, headers: i, rawBody: o, body: n }, n) }, t => { const { message: a, response: r } = t; e(a, r, r && s.decode(r.rawBody, this.encoding)) }) } } post(t, e = (() => { })) { const s = t.method ? t.method.toLocaleLowerCase() : "post"; switch (t.body && t.headers && !t.headers["Content-Type"] && !t.headers["content-type"] && (t.headers["content-type"] = "application/x-www-form-urlencoded"), t.headers && (delete t.headers["Content-Length"], delete t.headers["content-length"]), this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": default: this.isSurge() && this.isNeedRewrite && (t.headers = t.headers || {}, Object.assign(t.headers, { "X-Surge-Skip-Scripting": !1 })), $httpClient[s](t, (t, s, a) => { !t && s && (s.body = a, s.statusCode = s.status ? s.status : s.statusCode, s.status = s.statusCode), e(t, s, a) }); break; case "Quantumult X": t.method = s, this.isNeedRewrite && (t.opts = t.opts || {}, Object.assign(t.opts, { hints: !1 })), $task.fetch(t).then(t => { const { statusCode: s, statusCode: a, headers: r, body: i, bodyBytes: o } = t; e(null, { status: s, statusCode: a, headers: r, body: i, bodyBytes: o }, i, o) }, t => e(t && t.error || "UndefinedError")); break; case "Node.js": let a = require("iconv-lite"); this.initGotEnv(t); const { url: r, ...i } = t; this.got[s](r, i).then(t => { const { statusCode: s, statusCode: r, headers: i, rawBody: o } = t, n = a.decode(o, this.encoding); e(null, { status: s, statusCode: r, headers: i, rawBody: o, body: n }, n) }, t => { const { message: s, response: r } = t; e(s, r, r && a.decode(r.rawBody, this.encoding)) }) } } time(t, e = null) { const s = e ? new Date(e) : new Date; let a = { "M+": s.getMonth() + 1, "d+": s.getDate(), "H+": s.getHours(), "m+": s.getMinutes(), "s+": s.getSeconds(), "q+": Math.floor((s.getMonth() + 3) / 3), S: s.getMilliseconds() }; /(y+)/.test(t) && (t = t.replace(RegExp.$1, (s.getFullYear() + "").substr(4 - RegExp.$1.length))); for (let e in a) new RegExp("(" + e + ")").test(t) && (t = t.replace(RegExp.$1, 1 == RegExp.$1.length ? a[e] : ("00" + a[e]).substr(("" + a[e]).length))); return t } queryStr(t) { let e = ""; for (const s in t) { let a = t[s]; null != a && "" !== a && ("object" == typeof a && (a = JSON.stringify(a)), e += `${s}=${a}&`) } return e = e.substring(0, e.length - 1), e } msg(e = t, s = "", a = "", r) { const i = t => { switch (typeof t) { case void 0: return t; case "string": switch (this.getEnv()) { case "Surge": case "Stash": default: return { url: t }; case "Loon": case "Shadowrocket": return t; case "Quantumult X": return { "open-url": t }; case "Node.js": return }case "object": switch (this.getEnv()) { case "Surge": case "Stash": case "Shadowrocket": default: { let e = t.url || t.openUrl || t["open-url"]; return { url: e } } case "Loon": { let e = t.openUrl || t.url || t["open-url"], s = t.mediaUrl || t["media-url"]; return { openUrl: e, mediaUrl: s } } case "Quantumult X": { let e = t["open-url"] || t.url || t.openUrl, s = t["media-url"] || t.mediaUrl, a = t["update-pasteboard"] || t.updatePasteboard; return { "open-url": e, "media-url": s, "update-pasteboard": a } } case "Node.js": return }default: return } }; if (!this.isMute) switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": default: $notification.post(e, s, a, i(r)); break; case "Quantumult X": $notify(e, s, a, i(r)); break; case "Node.js": }if (!this.isMuteLog) { let t = ["", "==============📣系统通知📣=============="]; t.push(e), s && t.push(s), a && t.push(a), console.log(t.join("\n")), this.logs = this.logs.concat(t) } } log(...t) { t.length > 0 && (this.logs = [...this.logs, ...t]), console.log(t.join(this.logSeparator)) } logErr(t, e) { switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": case "Quantumult X": default: this.log("", `❗️${this.name}, 错误!`, t); break; case "Node.js": this.log("", `❗️${this.name}, 错误!`, t.stack) } } wait(t) { return new Promise(e => setTimeout(e, t)) } done(t = {}) { const e = (new Date).getTime(), s = (e - this.startTime) / 1e3; switch (this.log("", `🔔${this.name}, 结束! 🕛 ${s} 秒`), this.log(), this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": case "Quantumult X": default: $done(t); break; case "Node.js": process.exit(1) } } }(t, e) }
