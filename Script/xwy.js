/**************************************

脚本名称：微信小程序 希望云社区 积分兑换实物
脚本作者：@Sliverkiss
更新日期：2023.08.01 16:40:11

脚本兼容：Surge、QuantumultX、Loon、Shadowrocket、Node.js
只测试过loon和青龙，其它环境请自行尝试

*************************
【 签到脚本使用教程 】:
*************************

青龙：
1.登录后抓包 xwyapi.newhope.cn 域名下的Authorization和customerId，用#连接，填写到xwy_data,多账号用 @ 分割
2.可选推送：将bark的key填写到bark_key，不填默认使用青龙自带的推送

Loon: 
1.将获取Cookie脚本保存到本地
2.打开小程序->我的->积分，若提示获取Cookie成功则可以使用该脚本
3.关闭获取ck脚本，避免产生不必要的mitm。

[Script]
cron "0 20 * * *" script-path=https://raw.githubusercontent.com/Sliverkiss/GoodNight/master/Script/xwy.js, timeout=300, tag=希望云社区
http-request ^https:\/\/xwyapi.newhope.cn\/customer\/score\/detailUser\?customerId=.+ script-path=https://raw.githubusercontent.com/Sliverkiss/GoodNight/master/Script/xwy.js, timeout=10, tag=希望云社区获取token
[MITM]
hostname =xwyapi.newhope.cn


------------------------------------------
1、此脚本仅用于学习研究，不保证其合法性、准确性、有效性，请根据情况自行判断，本人对此不承担任何保证责任。
2、由于此脚本仅用于学习研究，您必须在下载后 24 小时内将所有内容从您的计算机或手机或任何存储设备中完全删除，若违反规定引起任何事件本人对此均不负责。
3、请勿将此脚本用于任何商业或非法目的，若违反规定请自行对此负责。
4、此脚本涉及应用与本人无关，本人对因此引起的任何隐私泄漏或其他后果不承担任何责任。
5、本人对任何脚本引发的问题概不负责，包括但不限于由脚本错误引起的任何损失和损害。
6、如果任何单位或个人认为此脚本可能涉嫌侵犯其权利，应及时通知并提供身份证明，所有权证明，我们将在收到认证文件确认后删除此脚本。
7、所有直接或间接使用、查看此脚本的人均应该仔细阅读此声明。本人保留随时更改或补充此声明的权利。一旦您使用或复制了此脚本，即视为您已接受此免责声明。


******************************************/


// env.js 全局
const _0x57dcbf=_0x13d2;(function(_0x24fe40,_0x48eb17){const _0x3d0bb0=_0x13d2,_0x224c59=_0x24fe40();while(!![]){try{const _0x4391fc=parseInt(_0x3d0bb0(0x19b))/0x1+parseInt(_0x3d0bb0(0x18c))/0x2+-parseInt(_0x3d0bb0(0x15a))/0x3*(-parseInt(_0x3d0bb0(0x16e))/0x4)+parseInt(_0x3d0bb0(0x187))/0x5*(-parseInt(_0x3d0bb0(0x17b))/0x6)+parseInt(_0x3d0bb0(0x1a5))/0x7+parseInt(_0x3d0bb0(0x166))/0x8*(-parseInt(_0x3d0bb0(0x185))/0x9)+-parseInt(_0x3d0bb0(0x182))/0xa;if(_0x4391fc===_0x48eb17)break;else _0x224c59['push'](_0x224c59['shift']());}catch(_0x1fcc49){_0x224c59['push'](_0x224c59['shift']());}}}(_0x3b56,0xd1b71));const $=new Env(_0x57dcbf(0x186)),ckName='xwy_data',Notify=0x1,notify=$['isNode']()?require(_0x57dcbf(0x17d)):'';let envSplitor=['@'],userCookie=($[_0x57dcbf(0x192)]()?process[_0x57dcbf(0x19f)][ckName]:$['getdata'](ckName))||'',userList=[],userIdx=0x0,userCount=0x0;$[_0x57dcbf(0x174)]=[],$[_0x57dcbf(0x172)]=($[_0x57dcbf(0x192)]()?process[_0x57dcbf(0x19f)][_0x57dcbf(0x19a)]:$[_0x57dcbf(0x1a4)]('bark_key'))||'';async function main(){const _0x445fc3=_0x57dcbf;await getNotice(),console[_0x445fc3(0x180)](_0x445fc3(0x194));let _0x59966f=[];for(let _0x1a31a3 of userList){console[_0x445fc3(0x180)]('🔷账号'+_0x1a31a3[_0x445fc3(0x16c)]+_0x445fc3(0x169)),_0x59966f['push'](await _0x1a31a3[_0x445fc3(0x198)]()),await $['wait'](_0x1a31a3[_0x445fc3(0x176)]());}await Promise['all'](_0x59966f),console[_0x445fc3(0x180)](_0x445fc3(0x18d)),_0x59966f=[];for(let _0x3e82ae of userList){_0x3e82ae[_0x445fc3(0x159)]?(DoubleLog('🔷账号'+_0x3e82ae[_0x445fc3(0x16c)]+_0x445fc3(0x17a)),console[_0x445fc3(0x180)]('随机延迟'+_0x3e82ae[_0x445fc3(0x176)]()+'ms'),_0x59966f[_0x445fc3(0x183)](await _0x3e82ae[_0x445fc3(0x167)]()),await $['wait'](_0x3e82ae[_0x445fc3(0x176)]()),_0x59966f[_0x445fc3(0x183)](await _0x3e82ae[_0x445fc3(0x17e)]()),await $[_0x445fc3(0x16f)](_0x3e82ae[_0x445fc3(0x176)]()),_0x59966f['push'](await _0x3e82ae[_0x445fc3(0x171)]()),await $['wait'](_0x3e82ae[_0x445fc3(0x176)]())):$['notifyMsg'][_0x445fc3(0x183)](_0x445fc3(0x163)+_0x3e82ae[_0x445fc3(0x16c)]+_0x445fc3(0x164));}await Promise[_0x445fc3(0x175)](_0x59966f);}class UserInfo{constructor(_0x4cfb21){const _0x2de36a=_0x57dcbf;this[_0x2de36a(0x16c)]=++userIdx,this[_0x2de36a(0x190)]=_0x4cfb21;let _0x2b4f61=_0x4cfb21[_0x2de36a(0x1a0)]('#');this['token']=_0x2b4f61[0x0],this[_0x2de36a(0x19c)]=_0x2b4f61[0x1],this[_0x2de36a(0x159)]=!![],this[_0x2de36a(0x18e)]={'Authorization':this[_0x2de36a(0x190)],'User-Agent':_0x2de36a(0x18a),'Content-Type':_0x2de36a(0x18b)};}[_0x57dcbf(0x176)](){return randomInt(0x3e8,0xbb8);}async['signin'](){const _0x400068=_0x57dcbf;try{const _0x11b30e={'url':_0x400068(0x16b),'headers':{'Authorization':this[_0x400068(0x190)],'User-Agent':_0x400068(0x18a),'Content-Type':_0x400068(0x18b)},'body':_0x400068(0x16a)};let _0x1d1274=await httpRequest(_0x11b30e);_0x1d1274?.[_0x400068(0x15b)]=='0000'?_0x1d1274?.[_0x400068(0x161)]?.['ifSignIn']==0x0?DoubleLog('【签到结果】：签到成功！获得'+_0x1d1274?.[_0x400068(0x158)]+'积分'):DoubleLog('【签到结果】：今日已签到'):console[_0x400068(0x180)](_0x1d1274);}catch(_0x774c81){console[_0x400068(0x180)](_0x774c81);}}async[_0x57dcbf(0x17e)](){const _0x456701=_0x57dcbf;try{const _0x4946e2={'url':_0x456701(0x15e),'headers':this[_0x456701(0x18e)]};let _0x142467=await httpRequest(_0x4946e2);_0x142467?.[_0x456701(0x15b)]==_0x456701(0x1a1)?_0x142467?.[_0x456701(0x161)]?.[_0x456701(0x19d)]==0x3?await this[_0x456701(0x196)]():DoubleLog(_0x456701(0x193)):console[_0x456701(0x180)](_0x142467);}catch(_0x40e663){console['log'](_0x40e663);}}async[_0x57dcbf(0x196)](){const _0x1d5524=_0x57dcbf;let _0x2b2d91={'url':'https://xwyapi.newhope.cn/xwh-mall/xwhTurntableLottery/draw','headers':this[_0x1d5524(0x18e)]},_0xca5e1b=await httpRequest(_0x2b2d91);_0xca5e1b?.[_0x1d5524(0x188)]=='操作成功'?DoubleLog(_0x1d5524(0x15f)):console[_0x1d5524(0x180)](_0xca5e1b);}async['point'](){const _0x278386=_0x57dcbf;let _0x4096c6={'url':_0x278386(0x160)+this['customerId'],'headers':this[_0x278386(0x18e)]},_0x3e9ee9=await httpRequest(_0x4096c6);_0x3e9ee9?.[_0x278386(0x15b)]==_0x278386(0x1a1)?DoubleLog(_0x278386(0x184)+_0x3e9ee9?.[_0x278386(0x161)]?.[_0x278386(0x1a7)]):console[_0x278386(0x180)](_0x3e9ee9);}async[_0x57dcbf(0x198)](){const _0x7e857b=_0x57dcbf;let _0x261df7={'url':_0x7e857b(0x160)+this['customerId'],'headers':this['headers']},_0x116956=await httpRequest(_0x261df7);_0x116956?.[_0x7e857b(0x15b)]=='0000'?console[_0x7e857b(0x180)](_0x7e857b(0x179)):(this[_0x7e857b(0x159)]=![],console['log']('❌账号'+this[_0x7e857b(0x16c)]+_0x7e857b(0x19e)));}}async function getCookie(){const _0x10e0df=_0x57dcbf;if($request&&$request['method']!=_0x10e0df(0x1a8)){const _0x3cc025=$request['headers'][_0x10e0df(0x1a6)]||$[_0x10e0df(0x191)][_0x10e0df(0x18e)][_0x10e0df(0x195)],_0x2636c6=$request[_0x10e0df(0x178)];let _0x49c394=_0x2636c6['split']('='),_0x4246c1=_0x49c394[0x1];if(_0x3cc025&&_0x4246c1){let _0x982106=_0x3cc025+'#'+_0x4246c1;$[_0x10e0df(0x177)](_0x982106,ckName),$['msg']($[_0x10e0df(0x170)],'','获取签到Cookie成功🎉');}else $[_0x10e0df(0x199)]($[_0x10e0df(0x170)],'','错误获取签到Cookie失败');}}async function getNotice(){const _0x10dd34=_0x57dcbf;try{const _0x285633=[_0x10dd34(0x16d),_0x10dd34(0x197)];for(const _0x19a9eb of _0x285633){const _0x5420e5={'url':_0x19a9eb,'headers':{'User-Agent':''}},_0x796a5e=await httpRequest(_0x5420e5);if(_0x796a5e)console[_0x10dd34(0x180)](_0x796a5e[_0x10dd34(0x1a3)]);}}catch(_0x33a308){console['log'](_0x33a308);}}!(async()=>{const _0x140833=_0x57dcbf;if(typeof $request!='undefined'){await getCookie();return;}if(!await checkEnv())throw new Error(_0x140833(0x15c));;userList[_0x140833(0x165)]>0x0&&await main();})()['catch'](_0xdbdd85=>$['notifyMsg'][_0x57dcbf(0x183)](_0xdbdd85[_0x57dcbf(0x188)]||_0xdbdd85))['finally'](async()=>{const _0x64febb=_0x57dcbf;$[_0x64febb(0x172)]&&await BarkNotify($,$[_0x64febb(0x172)],$['name'],$[_0x64febb(0x174)][_0x64febb(0x181)]('\x0a'));;await SendMsg($[_0x64febb(0x174)][_0x64febb(0x181)]('\x0a')),$[_0x64febb(0x173)]();});function _0x3b56(){const _0x26d5b0=['done','notifyMsg','all','getRandomTime','setdata','url','✅check\x20success!','\x20>>\x20Start\x20work','19038YoHdSC','个账号','./sendNotify','findTurntableTitle','keys','log','join','15587460oQzWBL','push','【积分】：','63Voifbt','希望云社区','270TBLFZj','message','round','Mozilla/5.0\x20(iPhone;\x20CPU\x20iPhone\x20OS\x2014_8\x20like\x20Mac\x20OS\x20X)\x20AppleWebKit/605.1.15\x20(KHTML,\x20like\x20Gecko)\x20Mobile/15E148\x20MicroMessenger/8.0.39(0x18002732)\x20NetType/WIFI\x20Language/zh_CN','application/json;charset=utf8','1367706IXQSWZ','\x0a==================\x20任务\x20==================\x0a','headers','map','token','request','isNode','【抽奖结果】：当前无抽奖次数','\x0a=============\x20用户CK有效性验证\x20=============\x0a','authorization','draw','https://raw.githubusercontent.com/Sliverkiss/GoodNight/main/tip.json','check','msg','bark_key','532186KWTnWv','customerId','remain','\x20>>\x20check\x20ck\x20error!','env','split','0000','sendNotify','notice','getdata','4777521WDBWfs','Authorization','currentScore','OPTIONS','integral','ckStatus','4590441QIZKfE','code','❌未检测到ck，请添加环境变量','indexOf','https://xwyapi.newhope.cn/xwh-mall/xwhTurntableLottery/findTurntableTitle','【抽奖结果】：抽奖成功！','https://xwyapi.newhope.cn/customer/score/detailUser?customerId=','body','未找到CK','❌账号','\x20>>\x20Check\x20ck\x20error!','length','959552BZwyoo','signin','random','\x20>>\x20Start\x20check\x20CK','{\x22action\x22:\x22fixedSignIn\x22}','https://xwyapi.newhope.cn/customer/score/pointsIssuance','index','https://raw.githubusercontent.com/Sliverkiss/GoodNight/main/notice.json','4pRNIYq','wait','name','point','barkKey'];_0x3b56=function(){return _0x26d5b0;};return _0x3b56();}function _0x13d2(_0xa5775f,_0x46d590){const _0x3b56d7=_0x3b56();return _0x13d2=function(_0x13d2d8,_0x14c3ad){_0x13d2d8=_0x13d2d8-0x158;let _0x2b78af=_0x3b56d7[_0x13d2d8];return _0x2b78af;},_0x13d2(_0xa5775f,_0x46d590);}function DoubleLog(_0x127194){const _0x6c0ca0=_0x57dcbf;$['isNode']()?_0x127194&&(console[_0x6c0ca0(0x180)](''+_0x127194),$[_0x6c0ca0(0x174)][_0x6c0ca0(0x183)](''+_0x127194)):(console[_0x6c0ca0(0x180)](''+_0x127194),$[_0x6c0ca0(0x174)][_0x6c0ca0(0x183)](''+_0x127194));}function toParams(_0x4742e0){const _0x5720a1=_0x57dcbf;var _0x2374aa=Object[_0x5720a1(0x17f)](_0x4742e0)[_0x5720a1(0x18f)](function(_0x6fd21d){return encodeURIComponent(_0x6fd21d)+'='+encodeURIComponent(_0x4742e0[_0x6fd21d]);})[_0x5720a1(0x181)]('&');return _0x2374aa;}async function checkEnv(){const _0x329b3e=_0x57dcbf;if(userCookie){let _0x3d94e7=envSplitor[0x0];for(let _0x23b651 of envSplitor)if(userCookie[_0x329b3e(0x15d)](_0x23b651)>-0x1){_0x3d94e7=_0x23b651;break;}for(let _0x541269 of userCookie[_0x329b3e(0x1a0)](_0x3d94e7))_0x541269&&userList['push'](new UserInfo(_0x541269));userCount=userList[_0x329b3e(0x165)];}else{console[_0x329b3e(0x180)](_0x329b3e(0x162));return;}return console[_0x329b3e(0x180)]('共找到'+userCount+_0x329b3e(0x17c)),!![];}function randomInt(_0xb48232,_0x36866b){const _0x3320a1=_0x57dcbf;return Math[_0x3320a1(0x189)](Math[_0x3320a1(0x168)]()*(_0x36866b-_0xb48232)+_0xb48232);}async function SendMsg(_0x1ed52a){const _0x546068=_0x57dcbf;if(!_0x1ed52a)return;Notify>0x0?$['isNode']()?await notify[_0x546068(0x1a2)]($[_0x546068(0x170)],_0x1ed52a):$['msg']($['name'],'',_0x1ed52a):console['log'](_0x1ed52a);}
/** ---------------------------------固定不动区域----------------------------------------- */
// prettier-ignore

//请求函数函数二次封装
function httpRequest(options, method) { typeof (method) === 'undefined' ? ('body' in options ? method = 'post' : method = 'get') : method = method; return new Promise((resolve) => { $[method](options, (err, resp, data) => { try { if (err) { console.log(`${method}请求失败`); $.logErr(err) } else { if (data) { typeof JSON.parse(data) == 'object' ? data = JSON.parse(data) : data = data; resolve(data) } else { console.log(`请求api返回数据为空，请检查自身原因`) } } } catch (e) { $.logErr(e, resp) } finally { resolve() } }) }) }
//Bark APP notify
async function BarkNotify(c, k, t, b) { for (let i = 0; i < 3; i++) { console.log(`🔷Bark notify >> Start push (${i + 1})`); const s = await new Promise((n) => { c.post({ url: 'https://api.day.app/push', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ title: t, body: b, device_key: k, ext_params: { group: t } }) }, (e, r, d) => r && r.status == 200 ? n(1) : n(d || e)) }); if (s === 1) { console.log('✅Push success!'); break } else { console.log(`❌Push failed! >> ${s.message || s}`) } } };
//From chavyleung's Env.js
function Env(t, e) { class s { constructor(t) { this.env = t } send(t, e = "GET") { t = "string" == typeof t ? { url: t } : t; let s = this.get; return "POST" === e && (s = this.post), new Promise((e, a) => { s.call(this, t, (t, s, r) => { t ? a(t) : e(s) }) }) } get(t) { return this.send.call(this.env, t) } post(t) { return this.send.call(this.env, t, "POST") } } return new class { constructor(t, e) { this.name = t, this.http = new s(this), this.data = null, this.dataFile = "box.dat", this.logs = [], this.isMute = !1, this.isNeedRewrite = !1, this.logSeparator = "\n", this.encoding = "utf-8", this.startTime = (new Date).getTime(), Object.assign(this, e), this.log("", `🔔${this.name}, 开始!`) } getEnv() { return "undefined" != typeof $environment && $environment["surge-version"] ? "Surge" : "undefined" != typeof $environment && $environment["stash-version"] ? "Stash" : "undefined" != typeof module && module.exports ? "Node.js" : "undefined" != typeof $task ? "Quantumult X" : "undefined" != typeof $loon ? "Loon" : "undefined" != typeof $rocket ? "Shadowrocket" : void 0 } isNode() { return "Node.js" === this.getEnv() } isQuanX() { return "Quantumult X" === this.getEnv() } isSurge() { return "Surge" === this.getEnv() } isLoon() { return "Loon" === this.getEnv() } isShadowrocket() { return "Shadowrocket" === this.getEnv() } isStash() { return "Stash" === this.getEnv() } toObj(t, e = null) { try { return JSON.parse(t) } catch { return e } } toStr(t, e = null) { try { return JSON.stringify(t) } catch { return e } } getjson(t, e) { let s = e; const a = this.getdata(t); if (a) try { s = JSON.parse(this.getdata(t)) } catch { } return s } setjson(t, e) { try { return this.setdata(JSON.stringify(t), e) } catch { return !1 } } getScript(t) { return new Promise(e => { this.get({ url: t }, (t, s, a) => e(a)) }) } runScript(t, e) { return new Promise(s => { let a = this.getdata("@chavy_boxjs_userCfgs.httpapi"); a = a ? a.replace(/\n/g, "").trim() : a; let r = this.getdata("@chavy_boxjs_userCfgs.httpapi_timeout"); r = r ? 1 * r : 20, r = e && e.timeout ? e.timeout : r; const [i, o] = a.split("@"), n = { url: `http://${o}/v1/scripting/evaluate`, body: { script_text: t, mock_type: "cron", timeout: r }, headers: { "X-Key": i, Accept: "*/*" }, timeout: r }; this.post(n, (t, e, a) => s(a)) }).catch(t => this.logErr(t)) } loaddata() { if (!this.isNode()) return {}; { this.fs = this.fs ? this.fs : require("fs"), this.path = this.path ? this.path : require("path"); const t = this.path.resolve(this.dataFile), e = this.path.resolve(process.cwd(), this.dataFile), s = this.fs.existsSync(t), a = !s && this.fs.existsSync(e); if (!s && !a) return {}; { const a = s ? t : e; try { return JSON.parse(this.fs.readFileSync(a)) } catch (t) { return {} } } } } writedata() { if (this.isNode()) { this.fs = this.fs ? this.fs : require("fs"), this.path = this.path ? this.path : require("path"); const t = this.path.resolve(this.dataFile), e = this.path.resolve(process.cwd(), this.dataFile), s = this.fs.existsSync(t), a = !s && this.fs.existsSync(e), r = JSON.stringify(this.data); s ? this.fs.writeFileSync(t, r) : a ? this.fs.writeFileSync(e, r) : this.fs.writeFileSync(t, r) } } lodash_get(t, e, s) { const a = e.replace(/\[(\d+)\]/g, ".$1").split("."); let r = t; for (const t of a) if (r = Object(r)[t], void 0 === r) return s; return r } lodash_set(t, e, s) { return Object(t) !== t ? t : (Array.isArray(e) || (e = e.toString().match(/[^.[\]]+/g) || []), e.slice(0, -1).reduce((t, s, a) => Object(t[s]) === t[s] ? t[s] : t[s] = Math.abs(e[a + 1]) >> 0 == +e[a + 1] ? [] : {}, t)[e[e.length - 1]] = s, t) } getdata(t) { let e = this.getval(t); if (/^@/.test(t)) { const [, s, a] = /^@(.*?)\.(.*?)$/.exec(t), r = s ? this.getval(s) : ""; if (r) try { const t = JSON.parse(r); e = t ? this.lodash_get(t, a, "") : e } catch (t) { e = "" } } return e } setdata(t, e) { let s = !1; if (/^@/.test(e)) { const [, a, r] = /^@(.*?)\.(.*?)$/.exec(e), i = this.getval(a), o = a ? "null" === i ? null : i || "{}" : "{}"; try { const e = JSON.parse(o); this.lodash_set(e, r, t), s = this.setval(JSON.stringify(e), a) } catch (e) { const i = {}; this.lodash_set(i, r, t), s = this.setval(JSON.stringify(i), a) } } else s = this.setval(t, e); return s } getval(t) { switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": return $persistentStore.read(t); case "Quantumult X": return $prefs.valueForKey(t); case "Node.js": return this.data = this.loaddata(), this.data[t]; default: return this.data && this.data[t] || null } } setval(t, e) { switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": return $persistentStore.write(t, e); case "Quantumult X": return $prefs.setValueForKey(t, e); case "Node.js": return this.data = this.loaddata(), this.data[e] = t, this.writedata(), !0; default: return this.data && this.data[e] || null } } initGotEnv(t) { this.got = this.got ? this.got : require("got"), this.cktough = this.cktough ? this.cktough : require("tough-cookie"), this.ckjar = this.ckjar ? this.ckjar : new this.cktough.CookieJar, t && (t.headers = t.headers ? t.headers : {}, void 0 === t.headers.Cookie && void 0 === t.cookieJar && (t.cookieJar = this.ckjar)) } get(t, e = (() => { })) { switch (t.headers && (delete t.headers["Content-Type"], delete t.headers["Content-Length"], delete t.headers["content-type"], delete t.headers["content-length"]), t.params && (t.url += "?" + this.queryStr(t.params)), this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": default: this.isSurge() && this.isNeedRewrite && (t.headers = t.headers || {}, Object.assign(t.headers, { "X-Surge-Skip-Scripting": !1 })), $httpClient.get(t, (t, s, a) => { !t && s && (s.body = a, s.statusCode = s.status ? s.status : s.statusCode, s.status = s.statusCode), e(t, s, a) }); break; case "Quantumult X": this.isNeedRewrite && (t.opts = t.opts || {}, Object.assign(t.opts, { hints: !1 })), $task.fetch(t).then(t => { const { statusCode: s, statusCode: a, headers: r, body: i, bodyBytes: o } = t; e(null, { status: s, statusCode: a, headers: r, body: i, bodyBytes: o }, i, o) }, t => e(t && t.error || "UndefinedError")); break; case "Node.js": let s = require("iconv-lite"); this.initGotEnv(t), this.got(t).on("redirect", (t, e) => { try { if (t.headers["set-cookie"]) { const s = t.headers["set-cookie"].map(this.cktough.Cookie.parse).toString(); s && this.ckjar.setCookieSync(s, null), e.cookieJar = this.ckjar } } catch (t) { this.logErr(t) } }).then(t => { const { statusCode: a, statusCode: r, headers: i, rawBody: o } = t, n = s.decode(o, this.encoding); e(null, { status: a, statusCode: r, headers: i, rawBody: o, body: n }, n) }, t => { const { message: a, response: r } = t; e(a, r, r && s.decode(r.rawBody, this.encoding)) }) } } post(t, e = (() => { })) { const s = t.method ? t.method.toLocaleLowerCase() : "post"; switch (t.body && t.headers && !t.headers["Content-Type"] && !t.headers["content-type"] && (t.headers["content-type"] = "application/x-www-form-urlencoded"), t.headers && (delete t.headers["Content-Length"], delete t.headers["content-length"]), this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": default: this.isSurge() && this.isNeedRewrite && (t.headers = t.headers || {}, Object.assign(t.headers, { "X-Surge-Skip-Scripting": !1 })), $httpClient[s](t, (t, s, a) => { !t && s && (s.body = a, s.statusCode = s.status ? s.status : s.statusCode, s.status = s.statusCode), e(t, s, a) }); break; case "Quantumult X": t.method = s, this.isNeedRewrite && (t.opts = t.opts || {}, Object.assign(t.opts, { hints: !1 })), $task.fetch(t).then(t => { const { statusCode: s, statusCode: a, headers: r, body: i, bodyBytes: o } = t; e(null, { status: s, statusCode: a, headers: r, body: i, bodyBytes: o }, i, o) }, t => e(t && t.error || "UndefinedError")); break; case "Node.js": let a = require("iconv-lite"); this.initGotEnv(t); const { url: r, ...i } = t; this.got[s](r, i).then(t => { const { statusCode: s, statusCode: r, headers: i, rawBody: o } = t, n = a.decode(o, this.encoding); e(null, { status: s, statusCode: r, headers: i, rawBody: o, body: n }, n) }, t => { const { message: s, response: r } = t; e(s, r, r && a.decode(r.rawBody, this.encoding)) }) } } time(t, e = null) { const s = e ? new Date(e) : new Date; let a = { "M+": s.getMonth() + 1, "d+": s.getDate(), "H+": s.getHours(), "m+": s.getMinutes(), "s+": s.getSeconds(), "q+": Math.floor((s.getMonth() + 3) / 3), S: s.getMilliseconds() }; /(y+)/.test(t) && (t = t.replace(RegExp.$1, (s.getFullYear() + "").substr(4 - RegExp.$1.length))); for (let e in a) new RegExp("(" + e + ")").test(t) && (t = t.replace(RegExp.$1, 1 == RegExp.$1.length ? a[e] : ("00" + a[e]).substr(("" + a[e]).length))); return t } queryStr(t) { let e = ""; for (const s in t) { let a = t[s]; null != a && "" !== a && ("object" == typeof a && (a = JSON.stringify(a)), e += `${s}=${a}&`) } return e = e.substring(0, e.length - 1), e } msg(e = t, s = "", a = "", r) { const i = t => { switch (typeof t) { case void 0: return t; case "string": switch (this.getEnv()) { case "Surge": case "Stash": default: return { url: t }; case "Loon": case "Shadowrocket": return t; case "Quantumult X": return { "open-url": t }; case "Node.js": return }case "object": switch (this.getEnv()) { case "Surge": case "Stash": case "Shadowrocket": default: { let e = t.url || t.openUrl || t["open-url"]; return { url: e } } case "Loon": { let e = t.openUrl || t.url || t["open-url"], s = t.mediaUrl || t["media-url"]; return { openUrl: e, mediaUrl: s } } case "Quantumult X": { let e = t["open-url"] || t.url || t.openUrl, s = t["media-url"] || t.mediaUrl, a = t["update-pasteboard"] || t.updatePasteboard; return { "open-url": e, "media-url": s, "update-pasteboard": a } } case "Node.js": return }default: return } }; if (!this.isMute) switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": default: $notification.post(e, s, a, i(r)); break; case "Quantumult X": $notify(e, s, a, i(r)); break; case "Node.js": }if (!this.isMuteLog) { let t = ["", "==============📣系统通知📣=============="]; t.push(e), s && t.push(s), a && t.push(a), console.log(t.join("\n")), this.logs = this.logs.concat(t) } } log(...t) { t.length > 0 && (this.logs = [...this.logs, ...t]), console.log(t.join(this.logSeparator)) } logErr(t, e) { switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": case "Quantumult X": default: this.log("", `❗️${this.name}, 错误!`, t); break; case "Node.js": this.log("", `❗️${this.name}, 错误!`, t.stack) } } wait(t) { return new Promise(e => setTimeout(e, t)) } done(t = {}) { const e = (new Date).getTime(), s = (e - this.startTime) / 1e3; switch (this.log("", `🔔${this.name}, 结束! 🕛 ${s} 秒`), this.log(), this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": case "Quantumult X": default: $done(t); break; case "Node.js": process.exit(1) } } }(t, e) }
