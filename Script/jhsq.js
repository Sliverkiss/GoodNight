/**************************************
@Name：聚汇社区 资金盘 满20提现
@Author：Sliverkiss
@Date：2023-09-19 12:12:16

2023.09.19 优化抽奖逻辑，清空金币自动抽奖

网站入口地址：https://linfankj.com/h5/#/pages/account/register?inviteUserId=11269
介意邀请码可以把后面的参数删掉

使用方法：抓取linfankj.com域名下请求体的user_token填写到jhsq_data，多账号用 @ 分隔
脚本兼容：Surge、QuantumultX、Loon、Shadowrocket、Node.js
只测试过loon和青龙，其它环境请自行尝试】

====================================
⚠️【免责声明】
------------------------------------------
1、此脚本仅用于学习研究，不保证其合法性、准确性、有效性，请根据情况自行判断，本人对此不承担任何保证责任。
2、由于此脚本仅用于学习研究，您必须在下载后 24 小时内将所有内容从您的计算机或手机或任何存储设备中完全删除，若违反规定引起任何事件本人对此均不负责。
3、请勿将此脚本用于任何商业或非法目的，若违反规定请自行对此负责。
4、此脚本涉及应用与本人无关，本人对因此引起的任何隐私泄漏或其他后果不承担任何责任。
5、本人对任何脚本引发的问题概不负责，包括但不限于由脚本错误引起的任何损失和损害。
6、如果任何单位或个人认为此脚本可能涉嫌侵犯其权利，应及时通知并提供身份证明，所有权证明，我们将在收到认证文件确认后删除此脚本。
7、所有直接或间接使用、查看此脚本的人均应该仔细阅读此声明。本人保留随时更改或补充此声明的权利。一旦您使用或复制了此脚本，即视为您已接受此免责声明。
******************************************/

// env.js 全局
const _0x16837a=_0xc22f;(function(_0x441bf3,_0x202d69){const _0x16f244=_0xc22f,_0x46131c=_0x441bf3();while(!![]){try{const _0xb65938=parseInt(_0x16f244(0x142))/0x1+parseInt(_0x16f244(0x160))/0x2+parseInt(_0x16f244(0x148))/0x3*(parseInt(_0x16f244(0x13f))/0x4)+parseInt(_0x16f244(0x136))/0x5+parseInt(_0x16f244(0x154))/0x6+parseInt(_0x16f244(0x16a))/0x7+-parseInt(_0x16f244(0x15e))/0x8*(parseInt(_0x16f244(0x14a))/0x9);if(_0xb65938===_0x202d69)break;else _0x46131c['push'](_0x46131c['shift']());}catch(_0x449478){_0x46131c['push'](_0x46131c['shift']());}}}(_0x2477,0x631ea));const $=new Env(_0x16837a(0x171)),ckName=_0x16837a(0x163),Notify=0x1,notify=$[_0x16837a(0x144)]()?require(_0x16837a(0x159)):'';let envSplitor=['@'],userCookie=($[_0x16837a(0x144)]()?process[_0x16837a(0x13b)][ckName]:$[_0x16837a(0x13d)](ckName))||'',userList=[],userIdx=0x0,userCount=0x0;$['notifyMsg']=[],$['barkKey']=($[_0x16837a(0x144)]()?process['env'][_0x16837a(0x137)]:$[_0x16837a(0x13d)](_0x16837a(0x137)))||'';async function main(){const _0x224715=_0x16837a;console[_0x224715(0x15d)]('\x0a==================\x20任务\x20==================\x0a');let _0x1c91ab=[];for(let _0x4ea925 of userList){_0x4ea925[_0x224715(0x133)]?(console[_0x224715(0x15d)]('随机延迟'+_0x4ea925[_0x224715(0x162)]()+'ms'),_0x1c91ab[_0x224715(0x15a)](await _0x4ea925['signin']()),await $['wait'](_0x4ea925['getRandomTime']()),_0x1c91ab['push'](await _0x4ea925[_0x224715(0x16b)]()),await $[_0x224715(0x16c)](_0x4ea925[_0x224715(0x162)]())):$[_0x224715(0x146)][_0x224715(0x15a)](_0x224715(0x152)+_0x4ea925[_0x224715(0x16e)]+'\x20>>\x20Check\x20ck\x20error!');}await Promise[_0x224715(0x13a)](_0x1c91ab),console['log'](_0x224715(0x14d)),_0x1c91ab=[];for(let _0xbd3181 of userList){_0xbd3181[_0x224715(0x133)]?(console[_0x224715(0x15d)](_0x224715(0x143)+_0xbd3181[_0x224715(0x162)]()+'ms'),_0x1c91ab['push'](await _0xbd3181[_0x224715(0x141)]()),await $[_0x224715(0x16c)](_0xbd3181[_0x224715(0x162)]())):$[_0x224715(0x146)][_0x224715(0x15a)]('❌账号'+_0xbd3181['index']+_0x224715(0x155));}await Promise[_0x224715(0x13a)](_0x1c91ab);}class UserInfo{constructor(_0x3bfbd8){const _0xa60667=_0x16837a;this['index']=++userIdx,this[_0xa60667(0x165)]=_0x3bfbd8,this[_0xa60667(0x133)]=!![],this['drawStatus']=!![],this[_0xa60667(0x138)]={'User-Agent':'Mozilla/5.0\x20(Macintosh;\x20Intel\x20Mac\x20OS\x20X\x2010_15_7)\x20AppleWebKit/605.1.15\x20(KHTML,\x20like\x20Gecko)\x20Version/17.0\x20Safari/605.1.15','Cookie':'\x20','Content-Type':'application/x-www-form-urlencoded;\x20charset=utf-8'},this[_0xa60667(0x139)]='user_token='+this[_0xa60667(0x165)]+_0xa60667(0x161);}[_0x16837a(0x162)](){return randomInt(0x3e8,0xbb8);}async['signin'](){const _0x201f36=_0x16837a;try{const _0x2caae0={'url':_0x201f36(0x150),'headers':this['headers'],'body':this[_0x201f36(0x139)]};let _0x2067d5=await httpRequest(_0x2caae0);_0x2067d5?.[_0x201f36(0x170)]==0xc8?console[_0x201f36(0x15d)]('✅'+_0x2067d5?.[_0x201f36(0x172)]):console[_0x201f36(0x15d)]('🔶'+_0x2067d5?.[_0x201f36(0x172)]);}catch(_0x3d9e2b){console[_0x201f36(0x15d)](_0x3d9e2b);}}async[_0x16837a(0x16b)](){const _0xe8886a=_0x16837a;do{await this[_0xe8886a(0x157)]();}while(this[_0xe8886a(0x145)]);}async['draw'](){const _0x4f387a=_0x16837a;try{const _0x27ade3={'url':_0x4f387a(0x15c),'headers':this[_0x4f387a(0x138)],'body':this['body']};let _0x4433de=await httpRequest(_0x27ade3);_0x4433de?.[_0x4f387a(0x170)]==_0x4f387a(0x16d)?console[_0x4f387a(0x15d)](''+_0x4433de?.[_0x4f387a(0x172)]):(console[_0x4f387a(0x15d)](''+_0x4433de?.[_0x4f387a(0x172)]),this[_0x4f387a(0x145)]=![]);}catch(_0x2cd5d1){console[_0x4f387a(0x15d)](_0x2cd5d1);}}async[_0x16837a(0x141)](){const _0x22d3e4=_0x16837a;try{const _0x58cd52={'url':_0x22d3e4(0x15b),'headers':this[_0x22d3e4(0x138)],'body':this[_0x22d3e4(0x139)]};let _0x1a5410=await httpRequest(_0x58cd52);_0x1a5410?.[_0x22d3e4(0x170)]==0xc8?DoubleLog('【'+_0x1a5410?.[_0x22d3e4(0x14b)]?.['nickname']+_0x22d3e4(0x167)+_0x1a5410?.[_0x22d3e4(0x14b)]?.[_0x22d3e4(0x149)]+_0x22d3e4(0x166)+_0x1a5410?.[_0x22d3e4(0x14b)]?.[_0x22d3e4(0x14e)]):DoubleLog('🔶'+_0x1a5410?.[_0x22d3e4(0x172)]);}catch(_0x11bc01){console[_0x22d3e4(0x15d)](_0x11bc01);}}}async function getCookie(){const _0x2c0245=_0x16837a;if($request&&$request[_0x2c0245(0x16f)]!='OPTIONS'){const _0x5efbca=$request['headers'][_0x2c0245(0x153)]||$request[_0x2c0245(0x138)]['cookie'];_0x5efbca?($['setdata'](_0x5efbca,ckName),$[_0x2c0245(0x156)]($['name'],'',_0x2c0245(0x164))):$[_0x2c0245(0x156)]($['name'],'',_0x2c0245(0x151));}}!(async()=>{const _0x52cdfa=_0x16837a;if(typeof $request!=_0x52cdfa(0x14f)){await getCookie();return;}if(!await checkEnv())throw new Error('❌未检测到ck，请添加环境变量');;userList[_0x52cdfa(0x134)]>0x0&&await main();$[_0x52cdfa(0x13c)]&&await BarkNotify($,$[_0x52cdfa(0x13c)],$['name'],$['notifyMsg'][_0x52cdfa(0x158)]('\x0a'));;})()[_0x16837a(0x15f)](_0x2e4c45=>$[_0x16837a(0x146)][_0x16837a(0x15a)](_0x2e4c45[_0x16837a(0x172)]||_0x2e4c45))['finally'](async()=>{const _0x10e804=_0x16837a;await SendMsg($[_0x10e804(0x146)][_0x10e804(0x158)]('\x0a')),$['done']();});function DoubleLog(_0x4fd181){const _0x58a057=_0x16837a;$['isNode']()?_0x4fd181&&(console[_0x58a057(0x15d)](''+_0x4fd181),$[_0x58a057(0x146)][_0x58a057(0x15a)](''+_0x4fd181)):(console[_0x58a057(0x15d)](''+_0x4fd181),$[_0x58a057(0x146)][_0x58a057(0x15a)](''+_0x4fd181));}function toParams(_0x363d27){const _0x3da8af=_0x16837a;var _0xe64517=Object[_0x3da8af(0x169)](_0x363d27)[_0x3da8af(0x140)](function(_0x339629){return encodeURIComponent(_0x339629)+'='+encodeURIComponent(_0x363d27[_0x339629]);})[_0x3da8af(0x158)]('&');return _0xe64517;}async function checkEnv(){const _0x400890=_0x16837a;if(userCookie){let _0x21cf0c=envSplitor[0x0];for(let _0x4ccbcc of envSplitor)if(userCookie[_0x400890(0x147)](_0x4ccbcc)>-0x1){_0x21cf0c=_0x4ccbcc;break;}for(let _0x2b1de3 of userCookie[_0x400890(0x13e)](_0x21cf0c))_0x2b1de3&&userList[_0x400890(0x15a)](new UserInfo(_0x2b1de3));userCount=userList[_0x400890(0x134)];}else{console[_0x400890(0x15d)]('未找到CK');return;}return console['log'](_0x400890(0x135)+userCount+'个账号'),!![];}function randomInt(_0xc35f1,_0x42f41d){const _0x42e048=_0x16837a;return Math[_0x42e048(0x14c)](Math['random']()*(_0x42f41d-_0xc35f1)+_0xc35f1);}async function SendMsg(_0x1f30d2){const _0x51d9a9=_0x16837a;if(!_0x1f30d2)return;Notify>0x0?$[_0x51d9a9(0x144)]()?await notify['sendNotify']($[_0x51d9a9(0x168)],_0x1f30d2):$['msg']($['name'],'',_0x1f30d2):console['log'](_0x1f30d2);}function _0xc22f(_0x3265dd,_0x3ba0a6){const _0x24775d=_0x2477();return _0xc22f=function(_0xc22f03,_0x19f140){_0xc22f03=_0xc22f03-0x133;let _0x2d695b=_0x24775d[_0xc22f03];return _0x2d695b;},_0xc22f(_0x3265dd,_0x3ba0a6);}function _0x2477(){const _0x79410a=['wait','200','index','method','code','聚汇社区','message','ckStatus','length','共找到','1811550CBSoPl','bark_key','headers','body','all','env','barkKey','getdata','split','4fLrpYh','map','getLoginUser','365077IiVVeg','随机延迟','isNode','drawStatus','notifyMsg','indexOf','707739laXnDh','gold','1637271yMXgvN','data','round','\x0a=================\x20用户信息\x20=================\x0a','wallet','undefined','https://linfankj.com/api/account/qiandao','错误获取签到Cookie失败','❌账号','Cookie','23994JOrrAv','\x20>>\x20Check\x20ck\x20error!','msg','draw','join','./sendNotify','push','https://linfankj.com/api/user/getLoginUser','https://linfankj.com/api/subject/turntable/drawLottery','log','88UoIkrL','catch','1478718NlRACv','&request_client=H5','getRandomTime','jhsq_data','获取签到Cookie成功🎉','token',',当前现金:','】当前金币:','name','keys','4903115vCLLoO','drawList'];_0x2477=function(){return _0x79410a;};return _0x2477();}

/** ---------------------------------固定不动区域----------------------------------------- */
// prettier-ignore

//请求函数函数二次封装
function httpRequest(options, method) { typeof (method) === 'undefined' ? ('body' in options ? method = 'post' : method = 'get') : method = method; return new Promise((resolve) => { $[method](options, (err, resp, data) => { try { if (err) { console.log(`${method}请求失败`); $.logErr(err) } else { if (data) { typeof JSON.parse(data) == 'object' ? data = JSON.parse(data) : data = data; resolve(data) } else { console.log(`请求api返回数据为空，请检查自身原因`) } } } catch (e) { $.logErr(e, resp) } finally { resolve() } }) }) }
//Bark APP notify
async function BarkNotify(c, k, t, b) { for (let i = 0; i < 3; i++) { console.log(`🔷Bark notify >> Start push (${i + 1})`); const s = await new Promise((n) => { c.post({ url: 'https://api.day.app/push', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ title: t, body: b, device_key: k, ext_params: { group: t } }) }, (e, r, d) => r && r.status == 200 ? n(1) : n(d || e)) }); if (s === 1) { console.log('✅Push success!'); break } else { console.log(`❌Push failed! >> ${s.message || s}`) } } };
//From chavyleung's Env.js
function Env(t, e) { class s { constructor(t) { this.env = t } send(t, e = "GET") { t = "string" == typeof t ? { url: t } : t; let s = this.get; return "POST" === e && (s = this.post), new Promise((e, a) => { s.call(this, t, (t, s, r) => { t ? a(t) : e(s) }) }) } get(t) { return this.send.call(this.env, t) } post(t) { return this.send.call(this.env, t, "POST") } } return new class { constructor(t, e) { this.name = t, this.http = new s(this), this.data = null, this.dataFile = "box.dat", this.logs = [], this.isMute = !1, this.isNeedRewrite = !1, this.logSeparator = "\n", this.encoding = "utf-8", this.startTime = (new Date).getTime(), Object.assign(this, e), this.log("", `🔔${this.name}, 开始!`) } getEnv() { return "undefined" != typeof $environment && $environment["surge-version"] ? "Surge" : "undefined" != typeof $environment && $environment["stash-version"] ? "Stash" : "undefined" != typeof module && module.exports ? "Node.js" : "undefined" != typeof $task ? "Quantumult X" : "undefined" != typeof $loon ? "Loon" : "undefined" != typeof $rocket ? "Shadowrocket" : void 0 } isNode() { return "Node.js" === this.getEnv() } isQuanX() { return "Quantumult X" === this.getEnv() } isSurge() { return "Surge" === this.getEnv() } isLoon() { return "Loon" === this.getEnv() } isShadowrocket() { return "Shadowrocket" === this.getEnv() } isStash() { return "Stash" === this.getEnv() } toObj(t, e = null) { try { return JSON.parse(t) } catch { return e } } toStr(t, e = null) { try { return JSON.stringify(t) } catch { return e } } getjson(t, e) { let s = e; const a = this.getdata(t); if (a) try { s = JSON.parse(this.getdata(t)) } catch { } return s } setjson(t, e) { try { return this.setdata(JSON.stringify(t), e) } catch { return !1 } } getScript(t) { return new Promise(e => { this.get({ url: t }, (t, s, a) => e(a)) }) } runScript(t, e) { return new Promise(s => { let a = this.getdata("@chavy_boxjs_userCfgs.httpapi"); a = a ? a.replace(/\n/g, "").trim() : a; let r = this.getdata("@chavy_boxjs_userCfgs.httpapi_timeout"); r = r ? 1 * r : 20, r = e && e.timeout ? e.timeout : r; const [i, o] = a.split("@"), n = { url: `http://${o}/v1/scripting/evaluate`, body: { script_text: t, mock_type: "cron", timeout: r }, headers: { "X-Key": i, Accept: "*/*" }, timeout: r }; this.post(n, (t, e, a) => s(a)) }).catch(t => this.logErr(t)) } loaddata() { if (!this.isNode()) return {}; { this.fs = this.fs ? this.fs : require("fs"), this.path = this.path ? this.path : require("path"); const t = this.path.resolve(this.dataFile), e = this.path.resolve(process.cwd(), this.dataFile), s = this.fs.existsSync(t), a = !s && this.fs.existsSync(e); if (!s && !a) return {}; { const a = s ? t : e; try { return JSON.parse(this.fs.readFileSync(a)) } catch (t) { return {} } } } } writedata() { if (this.isNode()) { this.fs = this.fs ? this.fs : require("fs"), this.path = this.path ? this.path : require("path"); const t = this.path.resolve(this.dataFile), e = this.path.resolve(process.cwd(), this.dataFile), s = this.fs.existsSync(t), a = !s && this.fs.existsSync(e), r = JSON.stringify(this.data); s ? this.fs.writeFileSync(t, r) : a ? this.fs.writeFileSync(e, r) : this.fs.writeFileSync(t, r) } } lodash_get(t, e, s) { const a = e.replace(/\[(\d+)\]/g, ".$1").split("."); let r = t; for (const t of a) if (r = Object(r)[t], void 0 === r) return s; return r } lodash_set(t, e, s) { return Object(t) !== t ? t : (Array.isArray(e) || (e = e.toString().match(/[^.[\]]+/g) || []), e.slice(0, -1).reduce((t, s, a) => Object(t[s]) === t[s] ? t[s] : t[s] = Math.abs(e[a + 1]) >> 0 == +e[a + 1] ? [] : {}, t)[e[e.length - 1]] = s, t) } getdata(t) { let e = this.getval(t); if (/^@/.test(t)) { const [, s, a] = /^@(.*?)\.(.*?)$/.exec(t), r = s ? this.getval(s) : ""; if (r) try { const t = JSON.parse(r); e = t ? this.lodash_get(t, a, "") : e } catch (t) { e = "" } } return e } setdata(t, e) { let s = !1; if (/^@/.test(e)) { const [, a, r] = /^@(.*?)\.(.*?)$/.exec(e), i = this.getval(a), o = a ? "null" === i ? null : i || "{}" : "{}"; try { const e = JSON.parse(o); this.lodash_set(e, r, t), s = this.setval(JSON.stringify(e), a) } catch (e) { const i = {}; this.lodash_set(i, r, t), s = this.setval(JSON.stringify(i), a) } } else s = this.setval(t, e); return s } getval(t) { switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": return $persistentStore.read(t); case "Quantumult X": return $prefs.valueForKey(t); case "Node.js": return this.data = this.loaddata(), this.data[t]; default: return this.data && this.data[t] || null } } setval(t, e) { switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": return $persistentStore.write(t, e); case "Quantumult X": return $prefs.setValueForKey(t, e); case "Node.js": return this.data = this.loaddata(), this.data[e] = t, this.writedata(), !0; default: return this.data && this.data[e] || null } } initGotEnv(t) { this.got = this.got ? this.got : require("got"), this.cktough = this.cktough ? this.cktough : require("tough-cookie"), this.ckjar = this.ckjar ? this.ckjar : new this.cktough.CookieJar, t && (t.headers = t.headers ? t.headers : {}, void 0 === t.headers.Cookie && void 0 === t.cookieJar && (t.cookieJar = this.ckjar)) } get(t, e = (() => { })) { switch (t.headers && (delete t.headers["Content-Type"], delete t.headers["Content-Length"], delete t.headers["content-type"], delete t.headers["content-length"]), t.params && (t.url += "?" + this.queryStr(t.params)), this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": default: this.isSurge() && this.isNeedRewrite && (t.headers = t.headers || {}, Object.assign(t.headers, { "X-Surge-Skip-Scripting": !1 })), $httpClient.get(t, (t, s, a) => { !t && s && (s.body = a, s.statusCode = s.status ? s.status : s.statusCode, s.status = s.statusCode), e(t, s, a) }); break; case "Quantumult X": this.isNeedRewrite && (t.opts = t.opts || {}, Object.assign(t.opts, { hints: !1 })), $task.fetch(t).then(t => { const { statusCode: s, statusCode: a, headers: r, body: i, bodyBytes: o } = t; e(null, { status: s, statusCode: a, headers: r, body: i, bodyBytes: o }, i, o) }, t => e(t && t.error || "UndefinedError")); break; case "Node.js": let s = require("iconv-lite"); this.initGotEnv(t), this.got(t).on("redirect", (t, e) => { try { if (t.headers["set-cookie"]) { const s = t.headers["set-cookie"].map(this.cktough.Cookie.parse).toString(); s && this.ckjar.setCookieSync(s, null), e.cookieJar = this.ckjar } } catch (t) { this.logErr(t) } }).then(t => { const { statusCode: a, statusCode: r, headers: i, rawBody: o } = t, n = s.decode(o, this.encoding); e(null, { status: a, statusCode: r, headers: i, rawBody: o, body: n }, n) }, t => { const { message: a, response: r } = t; e(a, r, r && s.decode(r.rawBody, this.encoding)) }) } } post(t, e = (() => { })) { const s = t.method ? t.method.toLocaleLowerCase() : "post"; switch (t.body && t.headers && !t.headers["Content-Type"] && !t.headers["content-type"] && (t.headers["content-type"] = "application/x-www-form-urlencoded"), t.headers && (delete t.headers["Content-Length"], delete t.headers["content-length"]), this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": default: this.isSurge() && this.isNeedRewrite && (t.headers = t.headers || {}, Object.assign(t.headers, { "X-Surge-Skip-Scripting": !1 })), $httpClient[s](t, (t, s, a) => { !t && s && (s.body = a, s.statusCode = s.status ? s.status : s.statusCode, s.status = s.statusCode), e(t, s, a) }); break; case "Quantumult X": t.method = s, this.isNeedRewrite && (t.opts = t.opts || {}, Object.assign(t.opts, { hints: !1 })), $task.fetch(t).then(t => { const { statusCode: s, statusCode: a, headers: r, body: i, bodyBytes: o } = t; e(null, { status: s, statusCode: a, headers: r, body: i, bodyBytes: o }, i, o) }, t => e(t && t.error || "UndefinedError")); break; case "Node.js": let a = require("iconv-lite"); this.initGotEnv(t); const { url: r, ...i } = t; this.got[s](r, i).then(t => { const { statusCode: s, statusCode: r, headers: i, rawBody: o } = t, n = a.decode(o, this.encoding); e(null, { status: s, statusCode: r, headers: i, rawBody: o, body: n }, n) }, t => { const { message: s, response: r } = t; e(s, r, r && a.decode(r.rawBody, this.encoding)) }) } } time(t, e = null) { const s = e ? new Date(e) : new Date; let a = { "M+": s.getMonth() + 1, "d+": s.getDate(), "H+": s.getHours(), "m+": s.getMinutes(), "s+": s.getSeconds(), "q+": Math.floor((s.getMonth() + 3) / 3), S: s.getMilliseconds() }; /(y+)/.test(t) && (t = t.replace(RegExp.$1, (s.getFullYear() + "").substr(4 - RegExp.$1.length))); for (let e in a) new RegExp("(" + e + ")").test(t) && (t = t.replace(RegExp.$1, 1 == RegExp.$1.length ? a[e] : ("00" + a[e]).substr(("" + a[e]).length))); return t } queryStr(t) { let e = ""; for (const s in t) { let a = t[s]; null != a && "" !== a && ("object" == typeof a && (a = JSON.stringify(a)), e += `${s}=${a}&`) } return e = e.substring(0, e.length - 1), e } msg(e = t, s = "", a = "", r) { const i = t => { switch (typeof t) { case void 0: return t; case "string": switch (this.getEnv()) { case "Surge": case "Stash": default: return { url: t }; case "Loon": case "Shadowrocket": return t; case "Quantumult X": return { "open-url": t }; case "Node.js": return }case "object": switch (this.getEnv()) { case "Surge": case "Stash": case "Shadowrocket": default: { let e = t.url || t.openUrl || t["open-url"]; return { url: e } } case "Loon": { let e = t.openUrl || t.url || t["open-url"], s = t.mediaUrl || t["media-url"]; return { openUrl: e, mediaUrl: s } } case "Quantumult X": { let e = t["open-url"] || t.url || t.openUrl, s = t["media-url"] || t.mediaUrl, a = t["update-pasteboard"] || t.updatePasteboard; return { "open-url": e, "media-url": s, "update-pasteboard": a } } case "Node.js": return }default: return } }; if (!this.isMute) switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": default: $notification.post(e, s, a, i(r)); break; case "Quantumult X": $notify(e, s, a, i(r)); break; case "Node.js": }if (!this.isMuteLog) { let t = ["", "==============📣系统通知📣=============="]; t.push(e), s && t.push(s), a && t.push(a), console.log(t.join("\n")), this.logs = this.logs.concat(t) } } log(...t) { t.length > 0 && (this.logs = [...this.logs, ...t]), console.log(t.join(this.logSeparator)) } logErr(t, e) { switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": case "Quantumult X": default: this.log("", `❗️${this.name}, 错误!`, t); break; case "Node.js": this.log("", `❗️${this.name}, 错误!`, t.stack) } } wait(t) { return new Promise(e => setTimeout(e, t)) } done(t = {}) { const e = (new Date).getTime(), s = (e - this.startTime) / 1e3; switch (this.log("", `🔔${this.name}, 结束! 🕛 ${s} 秒`), this.log(), this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": case "Quantumult X": default: $done(t); break; case "Node.js": process.exit(1) } } }(t, e) }
