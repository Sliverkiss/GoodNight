const _0x18abc1=_0x3b79;function _0x189d(){const _0x53e391=['notifyMsg','undefined','env','msg','index','split','isNode','StormSniffer-Extension/2254\x20CFNetwork/1327.0.4\x20Darwin/21.2.0','https://yuchenios.com/wp-admin/admin-ajax.php','join','个账号','push','all','barkKey','ckStatus','ios游戏迷','./sendNotify','getdata','1qfranr','随机延迟','catch','bark_key','message','done','random','yuchenCookie','body','36dUpGhh','signin','success','6345471NAOClY','finally','2296048lnJbgg','name','656OMcAIL','6680255fJJnEo','5026668viIjyR','length','12436170KOFzrL','getRandomTime','🔷账号','headers','❌未检测到ck，请添加环境变量','未找到CK','application/x-www-form-urlencoded;\x20charset=utf-8','action=daily_sign','7eBfNNx','9138eLxMjH','log','12WmiGDs','map','2661068VCViEr'];_0x189d=function(){return _0x53e391;};return _0x189d();}function _0x3b79(_0x52f6b0,_0x21f109){const _0x189dc6=_0x189d();return _0x3b79=function(_0x3b799c,_0x181973){_0x3b799c=_0x3b799c-0xec;let _0x42656f=_0x189dc6[_0x3b799c];return _0x42656f;},_0x3b79(_0x52f6b0,_0x21f109);}(function(_0x316b44,_0x1f8030){const _0x201c54=_0x3b79,_0x247b8e=_0x316b44();while(!![]){try{const _0x51033a=-parseInt(_0x201c54(0xed))/0x1*(-parseInt(_0x201c54(0x10e))/0x2)+parseInt(_0x201c54(0x10a))/0x3*(-parseInt(_0x201c54(0xfd))/0x4)+-parseInt(_0x201c54(0xfe))/0x5+-parseInt(_0x201c54(0xff))/0x6*(-parseInt(_0x201c54(0x109))/0x7)+-parseInt(_0x201c54(0xfb))/0x8*(-parseInt(_0x201c54(0xf6))/0x9)+-parseInt(_0x201c54(0x101))/0xa+parseInt(_0x201c54(0xf9))/0xb*(parseInt(_0x201c54(0x10c))/0xc);if(_0x51033a===_0x1f8030)break;else _0x247b8e['push'](_0x247b8e['shift']());}catch(_0x250b5f){_0x247b8e['push'](_0x247b8e['shift']());}}}(_0x189d,0xc6ba1));const $=new Env(_0x18abc1(0x11e)),ckName=_0x18abc1(0xf4),Notify=0x1,notify=$[_0x18abc1(0x115)]()?require(_0x18abc1(0x11f)):'';let envSplitor=['@'],userCookie=($[_0x18abc1(0x115)]()?process['env'][ckName]:$[_0x18abc1(0xec)](ckName))||'',userList=[],userIdx=0x0,userCount=0x0;$[_0x18abc1(0x10f)]=[],$[_0x18abc1(0x11c)]=($[_0x18abc1(0x115)]()?process[_0x18abc1(0x111)][_0x18abc1(0xf0)]:$['getdata'](_0x18abc1(0xf0)))||'';async function main(){const _0x3b7906=_0x18abc1;console[_0x3b7906(0x10b)]('\x0a==================\x20任务\x20==================\x0a'),taskall=[];for(let _0x267e17 of userList){_0x267e17[_0x3b7906(0x11d)]?(DoubleLog(_0x3b7906(0x103)+_0x267e17[_0x3b7906(0x113)]+'\x20>>\x20Start\x20work'),console[_0x3b7906(0x10b)](_0x3b7906(0xee)+_0x267e17[_0x3b7906(0x102)]()+'ms'),taskall[_0x3b7906(0x11a)](await _0x267e17[_0x3b7906(0xf7)]()),await $['wait'](_0x267e17[_0x3b7906(0x102)]())):$[_0x3b7906(0x10f)][_0x3b7906(0x11a)]('❌账号'+_0x267e17[_0x3b7906(0x113)]+'\x20>>\x20Check\x20ck\x20error!');}await Promise[_0x3b7906(0x11b)](taskall);}class UserInfo{constructor(_0x3bcd91){const _0x330fd1=_0x18abc1;this['index']=++userIdx,this['ck']=_0x3bcd91,this[_0x330fd1(0x11d)]=!![],this[_0x330fd1(0x104)]={'User-Agent':_0x330fd1(0x116),'Cookie':this['ck'],'Content-Type':_0x330fd1(0x107)},this[_0x330fd1(0xf5)]=_0x330fd1(0x108);}[_0x18abc1(0x102)](){return randomInt(0x3e8,0xbb8);}async['signin'](){const _0x2e5d63=_0x18abc1;try{const _0x4a6521={'url':_0x2e5d63(0x117),'headers':this[_0x2e5d63(0x104)],'body':this[_0x2e5d63(0xf5)]};let _0x160198=await httpRequest(_0x4a6521);console[_0x2e5d63(0x10b)](_0x160198),_0x160198?.[_0x2e5d63(0xf8)]==_0x2e5d63(0xf8)?DoubleLog('✅'+_0x160198?.[_0x2e5d63(0x112)]):(DoubleLog('🔶'+_0x160198?.['msg']),console['log'](_0x160198));}catch(_0xa61dbe){console[_0x2e5d63(0x10b)](_0xa61dbe);}}}async function getCookie(){}!(async()=>{const _0xdce2b5=_0x18abc1;if(typeof $request!=_0xdce2b5(0x110)){await getCookie();return;}if(!await checkEnv())throw new Error(_0xdce2b5(0x105));;userList['length']>0x0&&await main();})()[_0x18abc1(0xef)](_0x34efaa=>$[_0x18abc1(0x10f)][_0x18abc1(0x11a)](_0x34efaa[_0x18abc1(0xf1)]||_0x34efaa))[_0x18abc1(0xfa)](async()=>{const _0x176c2a=_0x18abc1;$[_0x176c2a(0x11c)]&&await BarkNotify($,$[_0x176c2a(0x11c)],$[_0x176c2a(0xfc)],$[_0x176c2a(0x10f)][_0x176c2a(0x118)]('\x0a'));;await SendMsg($[_0x176c2a(0x10f)][_0x176c2a(0x118)]('\x0a')),$[_0x176c2a(0xf2)]();});function DoubleLog(_0x366d95){const _0x31afdf=_0x18abc1;$[_0x31afdf(0x115)]()?_0x366d95&&(console['log'](''+_0x366d95),$[_0x31afdf(0x10f)][_0x31afdf(0x11a)](''+_0x366d95)):(console[_0x31afdf(0x10b)](''+_0x366d95),$[_0x31afdf(0x10f)][_0x31afdf(0x11a)](''+_0x366d95));}function toParams(_0x5aed24){const _0x5b546f=_0x18abc1;var _0x372950=Object['keys'](_0x5aed24)[_0x5b546f(0x10d)](function(_0x366cb3){return encodeURIComponent(_0x366cb3)+'='+encodeURIComponent(_0x5aed24[_0x366cb3]);})['join']('&');return _0x372950;}async function checkEnv(){const _0x20e0b2=_0x18abc1;if(userCookie){let _0x134f21=envSplitor[0x0];for(let _0x464565 of envSplitor)if(userCookie['indexOf'](_0x464565)>-0x1){_0x134f21=_0x464565;break;}for(let _0x29730c of userCookie[_0x20e0b2(0x114)](_0x134f21))_0x29730c&&userList[_0x20e0b2(0x11a)](new UserInfo(_0x29730c));userCount=userList[_0x20e0b2(0x100)];}else{console[_0x20e0b2(0x10b)](_0x20e0b2(0x106));return;}return console[_0x20e0b2(0x10b)]('共找到'+userCount+_0x20e0b2(0x119)),!![];}function randomInt(_0x3f7094,_0x16e209){const _0x4144fc=_0x18abc1;return Math['round'](Math[_0x4144fc(0xf3)]()*(_0x16e209-_0x3f7094)+_0x3f7094);}async function SendMsg(_0x7613f1){const _0x15584e=_0x18abc1;if(!_0x7613f1)return;Notify>0x0?$[_0x15584e(0x115)]()?await notify['sendNotify']($[_0x15584e(0xfc)],_0x7613f1):$[_0x15584e(0x112)]($[_0x15584e(0xfc)],'',_0x7613f1):console[_0x15584e(0x10b)](_0x7613f1);}
function httpRequest(options, method) { typeof (method) === 'undefined' ? ('body' in options ? method = 'post' : method = 'get') : method = method; return new Promise((resolve) => { $[method](options, (err, resp, data) => { try { if (err) { console.log(`${method}请求失败`); $.logErr(err) } else { if (data) { typeof JSON.parse(data) == 'object' ? data = JSON.parse(data) : data = data; resolve(data) } else { console.log(`请求api返回数据为空，请检查自身原因`) } } } catch (e) { $.logErr(e, resp) } finally { resolve() } }) }) }
async function BarkNotify(c, k, t, b) { for (let i = 0; i < 3; i++) { console.log(`🔷Bark notify >> Start push (${i + 1})`); const s = await new Promise((n) => { c.post({ url: 'https://api.day.app/push', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ title: t, body: b, device_key: k, ext_params: { group: t } }) }, (e, r, d) => r && r.status == 200 ? n(1) : n(d || e)) }); if (s === 1) { console.log('✅Push success!'); break } else { console.log(`❌Push failed! >> ${s.message || s}`) } } };
function Env(t, e) { class s { constructor(t) { this.env = t } send(t, e = "GET") { t = "string" == typeof t ? { url: t } : t; let s = this.get; return "POST" === e && (s = this.post), new Promise((e, a) => { s.call(this, t, (t, s, r) => { t ? a(t) : e(s) }) }) } get(t) { return this.send.call(this.env, t) } post(t) { return this.send.call(this.env, t, "POST") } } return new class { constructor(t, e) { this.name = t, this.http = new s(this), this.data = null, this.dataFile = "box.dat", this.logs = [], this.isMute = !1, this.isNeedRewrite = !1, this.logSeparator = "\n", this.encoding = "utf-8", this.startTime = (new Date).getTime(), Object.assign(this, e), this.log("", `🔔${this.name}, 开始!`) } getEnv() { return "undefined" != typeof $environment && $environment["surge-version"] ? "Surge" : "undefined" != typeof $environment && $environment["stash-version"] ? "Stash" : "undefined" != typeof module && module.exports ? "Node.js" : "undefined" != typeof $task ? "Quantumult X" : "undefined" != typeof $loon ? "Loon" : "undefined" != typeof $rocket ? "Shadowrocket" : void 0 } isNode() { return "Node.js" === this.getEnv() } isQuanX() { return "Quantumult X" === this.getEnv() } isSurge() { return "Surge" === this.getEnv() } isLoon() { return "Loon" === this.getEnv() } isShadowrocket() { return "Shadowrocket" === this.getEnv() } isStash() { return "Stash" === this.getEnv() } toObj(t, e = null) { try { return JSON.parse(t) } catch { return e } } toStr(t, e = null) { try { return JSON.stringify(t) } catch { return e } } getjson(t, e) { let s = e; const a = this.getdata(t); if (a) try { s = JSON.parse(this.getdata(t)) } catch { } return s } setjson(t, e) { try { return this.setdata(JSON.stringify(t), e) } catch { return !1 } } getScript(t) { return new Promise(e => { this.get({ url: t }, (t, s, a) => e(a)) }) } runScript(t, e) { return new Promise(s => { let a = this.getdata("@chavy_boxjs_userCfgs.httpapi"); a = a ? a.replace(/\n/g, "").trim() : a; let r = this.getdata("@chavy_boxjs_userCfgs.httpapi_timeout"); r = r ? 1 * r : 20, r = e && e.timeout ? e.timeout : r; const [i, o] = a.split("@"), n = { url: `http://${o}/v1/scripting/evaluate`, body: { script_text: t, mock_type: "cron", timeout: r }, headers: { "X-Key": i, Accept: "*/*" }, timeout: r }; this.post(n, (t, e, a) => s(a)) }).catch(t => this.logErr(t)) } loaddata() { if (!this.isNode()) return {}; { this.fs = this.fs ? this.fs : require("fs"), this.path = this.path ? this.path : require("path"); const t = this.path.resolve(this.dataFile), e = this.path.resolve(process.cwd(), this.dataFile), s = this.fs.existsSync(t), a = !s && this.fs.existsSync(e); if (!s && !a) return {}; { const a = s ? t : e; try { return JSON.parse(this.fs.readFileSync(a)) } catch (t) { return {} } } } } writedata() { if (this.isNode()) { this.fs = this.fs ? this.fs : require("fs"), this.path = this.path ? this.path : require("path"); const t = this.path.resolve(this.dataFile), e = this.path.resolve(process.cwd(), this.dataFile), s = this.fs.existsSync(t), a = !s && this.fs.existsSync(e), r = JSON.stringify(this.data); s ? this.fs.writeFileSync(t, r) : a ? this.fs.writeFileSync(e, r) : this.fs.writeFileSync(t, r) } } lodash_get(t, e, s) { const a = e.replace(/\[(\d+)\]/g, ".$1").split("."); let r = t; for (const t of a) if (r = Object(r)[t], void 0 === r) return s; return r } lodash_set(t, e, s) { return Object(t) !== t ? t : (Array.isArray(e) || (e = e.toString().match(/[^.[\]]+/g) || []), e.slice(0, -1).reduce((t, s, a) => Object(t[s]) === t[s] ? t[s] : t[s] = Math.abs(e[a + 1]) >> 0 == +e[a + 1] ? [] : {}, t)[e[e.length - 1]] = s, t) } getdata(t) { let e = this.getval(t); if (/^@/.test(t)) { const [, s, a] = /^@(.*?)\.(.*?)$/.exec(t), r = s ? this.getval(s) : ""; if (r) try { const t = JSON.parse(r); e = t ? this.lodash_get(t, a, "") : e } catch (t) { e = "" } } return e } setdata(t, e) { let s = !1; if (/^@/.test(e)) { const [, a, r] = /^@(.*?)\.(.*?)$/.exec(e), i = this.getval(a), o = a ? "null" === i ? null : i || "{}" : "{}"; try { const e = JSON.parse(o); this.lodash_set(e, r, t), s = this.setval(JSON.stringify(e), a) } catch (e) { const i = {}; this.lodash_set(i, r, t), s = this.setval(JSON.stringify(i), a) } } else s = this.setval(t, e); return s } getval(t) { switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": return $persistentStore.read(t); case "Quantumult X": return $prefs.valueForKey(t); case "Node.js": return this.data = this.loaddata(), this.data[t]; default: return this.data && this.data[t] || null } } setval(t, e) { switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": return $persistentStore.write(t, e); case "Quantumult X": return $prefs.setValueForKey(t, e); case "Node.js": return this.data = this.loaddata(), this.data[e] = t, this.writedata(), !0; default: return this.data && this.data[e] || null } } initGotEnv(t) { this.got = this.got ? this.got : require("got"), this.cktough = this.cktough ? this.cktough : require("tough-cookie"), this.ckjar = this.ckjar ? this.ckjar : new this.cktough.CookieJar, t && (t.headers = t.headers ? t.headers : {}, void 0 === t.headers.Cookie && void 0 === t.cookieJar && (t.cookieJar = this.ckjar)) } get(t, e = (() => { })) { switch (t.headers && (delete t.headers["Content-Type"], delete t.headers["Content-Length"], delete t.headers["content-type"], delete t.headers["content-length"]), t.params && (t.url += "?" + this.queryStr(t.params)), this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": default: this.isSurge() && this.isNeedRewrite && (t.headers = t.headers || {}, Object.assign(t.headers, { "X-Surge-Skip-Scripting": !1 })), $httpClient.get(t, (t, s, a) => { !t && s && (s.body = a, s.statusCode = s.status ? s.status : s.statusCode, s.status = s.statusCode), e(t, s, a) }); break; case "Quantumult X": this.isNeedRewrite && (t.opts = t.opts || {}, Object.assign(t.opts, { hints: !1 })), $task.fetch(t).then(t => { const { statusCode: s, statusCode: a, headers: r, body: i, bodyBytes: o } = t; e(null, { status: s, statusCode: a, headers: r, body: i, bodyBytes: o }, i, o) }, t => e(t && t.error || "UndefinedError")); break; case "Node.js": let s = require("iconv-lite"); this.initGotEnv(t), this.got(t).on("redirect", (t, e) => { try { if (t.headers["set-cookie"]) { const s = t.headers["set-cookie"].map(this.cktough.Cookie.parse).toString(); s && this.ckjar.setCookieSync(s, null), e.cookieJar = this.ckjar } } catch (t) { this.logErr(t) } }).then(t => { const { statusCode: a, statusCode: r, headers: i, rawBody: o } = t, n = s.decode(o, this.encoding); e(null, { status: a, statusCode: r, headers: i, rawBody: o, body: n }, n) }, t => { const { message: a, response: r } = t; e(a, r, r && s.decode(r.rawBody, this.encoding)) }) } } post(t, e = (() => { })) { const s = t.method ? t.method.toLocaleLowerCase() : "post"; switch (t.body && t.headers && !t.headers["Content-Type"] && !t.headers["content-type"] && (t.headers["content-type"] = "application/x-www-form-urlencoded"), t.headers && (delete t.headers["Content-Length"], delete t.headers["content-length"]), this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": default: this.isSurge() && this.isNeedRewrite && (t.headers = t.headers || {}, Object.assign(t.headers, { "X-Surge-Skip-Scripting": !1 })), $httpClient[s](t, (t, s, a) => { !t && s && (s.body = a, s.statusCode = s.status ? s.status : s.statusCode, s.status = s.statusCode), e(t, s, a) }); break; case "Quantumult X": t.method = s, this.isNeedRewrite && (t.opts = t.opts || {}, Object.assign(t.opts, { hints: !1 })), $task.fetch(t).then(t => { const { statusCode: s, statusCode: a, headers: r, body: i, bodyBytes: o } = t; e(null, { status: s, statusCode: a, headers: r, body: i, bodyBytes: o }, i, o) }, t => e(t && t.error || "UndefinedError")); break; case "Node.js": let a = require("iconv-lite"); this.initGotEnv(t); const { url: r, ...i } = t; this.got[s](r, i).then(t => { const { statusCode: s, statusCode: r, headers: i, rawBody: o } = t, n = a.decode(o, this.encoding); e(null, { status: s, statusCode: r, headers: i, rawBody: o, body: n }, n) }, t => { const { message: s, response: r } = t; e(s, r, r && a.decode(r.rawBody, this.encoding)) }) } } time(t, e = null) { const s = e ? new Date(e) : new Date; let a = { "M+": s.getMonth() + 1, "d+": s.getDate(), "H+": s.getHours(), "m+": s.getMinutes(), "s+": s.getSeconds(), "q+": Math.floor((s.getMonth() + 3) / 3), S: s.getMilliseconds() }; /(y+)/.test(t) && (t = t.replace(RegExp.$1, (s.getFullYear() + "").substr(4 - RegExp.$1.length))); for (let e in a) new RegExp("(" + e + ")").test(t) && (t = t.replace(RegExp.$1, 1 == RegExp.$1.length ? a[e] : ("00" + a[e]).substr(("" + a[e]).length))); return t } queryStr(t) { let e = ""; for (const s in t) { let a = t[s]; null != a && "" !== a && ("object" == typeof a && (a = JSON.stringify(a)), e += `${s}=${a}&`) } return e = e.substring(0, e.length - 1), e } msg(e = t, s = "", a = "", r) { const i = t => { switch (typeof t) { case void 0: return t; case "string": switch (this.getEnv()) { case "Surge": case "Stash": default: return { url: t }; case "Loon": case "Shadowrocket": return t; case "Quantumult X": return { "open-url": t }; case "Node.js": return }case "object": switch (this.getEnv()) { case "Surge": case "Stash": case "Shadowrocket": default: { let e = t.url || t.openUrl || t["open-url"]; return { url: e } } case "Loon": { let e = t.openUrl || t.url || t["open-url"], s = t.mediaUrl || t["media-url"]; return { openUrl: e, mediaUrl: s } } case "Quantumult X": { let e = t["open-url"] || t.url || t.openUrl, s = t["media-url"] || t.mediaUrl, a = t["update-pasteboard"] || t.updatePasteboard; return { "open-url": e, "media-url": s, "update-pasteboard": a } } case "Node.js": return }default: return } }; if (!this.isMute) switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": default: $notification.post(e, s, a, i(r)); break; case "Quantumult X": $notify(e, s, a, i(r)); break; case "Node.js": }if (!this.isMuteLog) { let t = ["", "==============📣系统通知📣=============="]; t.push(e), s && t.push(s), a && t.push(a), console.log(t.join("\n")), this.logs = this.logs.concat(t) } } log(...t) { t.length > 0 && (this.logs = [...this.logs, ...t]), console.log(t.join(this.logSeparator)) } logErr(t, e) { switch (this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": case "Quantumult X": default: this.log("", `❗️${this.name}, 错误!`, t); break; case "Node.js": this.log("", `❗️${this.name}, 错误!`, t.stack) } } wait(t) { return new Promise(e => setTimeout(e, t)) } done(t = {}) { const e = (new Date).getTime(), s = (e - this.startTime) / 1e3; switch (this.log("", `🔔${this.name}, 结束! 🕛 ${s} 秒`), this.log(), this.getEnv()) { case "Surge": case "Loon": case "Stash": case "Shadowrocket": case "Quantumult X": default: $done(t); break; case "Node.js": process.exit(1) } } }(t, e) }
